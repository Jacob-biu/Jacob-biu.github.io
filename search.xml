<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>数学公式测试</title>
      <link href="/2024/09/26/%E6%95%B0%E5%AD%A6%E5%85%AC%E5%BC%8F%E6%B5%8B%E8%AF%95/"/>
      <url>/2024/09/26/%E6%95%B0%E5%AD%A6%E5%85%AC%E5%BC%8F%E6%B5%8B%E8%AF%95/</url>
      
        <content type="html"><![CDATA[<figure class="highlight latex"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">\begin</span>&#123;align*&#125;</span><br><span class="line"><span class="keyword">\int</span><span class="built_in">_</span>&#123;0&#125;<span class="built_in">^</span>&#123;<span class="keyword">\pi</span>&#125; <span class="keyword">\sin</span>(x) <span class="keyword">\,</span> dx <span class="built_in">&amp;</span>= <span class="keyword">\int</span><span class="built_in">_</span>&#123;0&#125;<span class="built_in">^</span>&#123;<span class="keyword">\frac</span>&#123;<span class="keyword">\pi</span>&#125;&#123;2&#125;&#125; <span class="keyword">\sin</span>(x) <span class="keyword">\,</span> dx + <span class="keyword">\int</span><span class="built_in">_</span>&#123;<span class="keyword">\frac</span>&#123;<span class="keyword">\pi</span>&#125;&#123;2&#125;&#125;<span class="built_in">^</span>&#123;<span class="keyword">\pi</span>&#125; <span class="keyword">\sin</span>(x) <span class="keyword">\,</span> dx <span class="keyword">\\</span></span><br><span class="line"><span class="built_in">&amp;</span>= -<span class="keyword">\cos</span>(x) <span class="keyword">\Big</span>|<span class="built_in">_</span>&#123;0&#125;<span class="built_in">^</span>&#123;<span class="keyword">\frac</span>&#123;<span class="keyword">\pi</span>&#125;&#123;2&#125;&#125; + (-<span class="keyword">\cos</span>(x) <span class="keyword">\Big</span>|<span class="built_in">_</span>&#123;<span class="keyword">\frac</span>&#123;<span class="keyword">\pi</span>&#125;&#123;2&#125;&#125;<span class="built_in">^</span>&#123;<span class="keyword">\pi</span>&#125;) <span class="keyword">\\</span></span><br><span class="line"><span class="built_in">&amp;</span>= 2</span><br><span class="line"><span class="keyword">\end</span>&#123;align*&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>leetcode977. 有序数组的平方：解题方法及思路</title>
      <link href="/2023/03/16/leetcode977.%20%E6%9C%89%E5%BA%8F%E6%95%B0%E7%BB%84%E7%9A%84%E5%B9%B3%E6%96%B9%EF%BC%9A%E8%A7%A3%E9%A2%98%E6%96%B9%E6%B3%95%E5%8F%8A%E6%80%9D%E8%B7%AF/"/>
      <url>/2023/03/16/leetcode977.%20%E6%9C%89%E5%BA%8F%E6%95%B0%E7%BB%84%E7%9A%84%E5%B9%B3%E6%96%B9%EF%BC%9A%E8%A7%A3%E9%A2%98%E6%96%B9%E6%B3%95%E5%8F%8A%E6%80%9D%E8%B7%AF/</url>
      
        <content type="html"><![CDATA[<blockquote><p>题目：</p></blockquote><p><code>给你一个按非递减顺序排序的整数数组 nums，返回每个数字的平方组成的新数组，要求也按非递减顺序排序。</code></p><blockquote><p>解题思路：</p></blockquote><p><code>方法一：直接排序法</code><br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function">vector&lt;<span class="type">int</span>&gt; <span class="title">sortedSquares</span><span class="params">(vector&lt;<span class="type">int</span>&gt;&amp; nums)</span> </span>&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;nums.<span class="built_in">size</span>();i++)&#123;</span><br><span class="line">nums[i] = <span class="built_in">pow</span>(nums[i], <span class="number">2</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">sort</span>(nums.<span class="built_in">begin</span>(), nums.<span class="built_in">end</span>());</span><br><span class="line"><span class="keyword">return</span> nums;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure></p><p><code>方法二：双指针法</code></p><blockquote><p>因为原数组排序是有序的，所以最大最小必定会从两端产生，因为每确定一个最大的值就将他填入数组最后一位，同时指针移动，继续比对剩下的数，直到左右指针相遇，比对完成。<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function">vector&lt;<span class="type">int</span>&gt; <span class="title">sortedSquares</span><span class="params">(vector&lt;<span class="type">int</span>&gt;&amp; nums)</span> </span>&#123;</span><br><span class="line"><span class="function">vector&lt;<span class="type">int</span>&gt; <span class="title">ans</span><span class="params">(nums.size())</span></span>;</span><br><span class="line"><span class="type">int</span> low, high, k;</span><br><span class="line"><span class="keyword">for</span>(low = <span class="number">0</span>, high = nums.<span class="built_in">size</span>()<span class="number">-1</span>, k= nums.<span class="built_in">size</span>()<span class="number">-1</span>;low &lt;= high; k--)&#123;</span><br><span class="line"><span class="type">int</span> a = <span class="built_in">pow</span>(nums[low], <span class="number">2</span>);</span><br><span class="line"><span class="type">int</span> b = <span class="built_in">pow</span>(nums[high], <span class="number">2</span>);</span><br><span class="line"><span class="keyword">if</span>(a &lt; b)&#123;</span><br><span class="line">high--;</span><br><span class="line">ans[k] = b;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">low++;</span><br><span class="line">ans[k] = a;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> ans;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure></p><p>思考: 是否可以使用快速排序进行排序<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">   <span class="function">vector&lt;<span class="type">int</span>&gt; <span class="title">sortedSquares</span><span class="params">(vector&lt;<span class="type">int</span>&gt;&amp; nums)</span> </span>&#123;</span><br><span class="line">       <span class="type">int</span>* nums_square = <span class="keyword">new</span> <span class="type">int</span>[nums.<span class="built_in">size</span>()];</span><br><span class="line">       <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>;i&lt;nums.<span class="built_in">size</span>();i++)&#123;</span><br><span class="line">           nums_square[i] = <span class="built_in">pow</span>(nums[i],<span class="number">2</span>);</span><br><span class="line">       &#125;</span><br><span class="line">       <span class="built_in">QuickSort</span>(nums_square, <span class="number">0</span> ,nums.<span class="built_in">size</span>());</span><br><span class="line">       <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>;i&lt;nums.<span class="built_in">size</span>();i++)&#123;</span><br><span class="line">           nums[i] = nums_square[i];</span><br><span class="line">       &#125;</span><br><span class="line">       <span class="keyword">return</span> nums;</span><br><span class="line">   &#125;</span><br><span class="line">   </span><br><span class="line">   <span class="function"><span class="type">void</span> <span class="title">QuickSort</span><span class="params">(<span class="type">int</span> * nums, <span class="type">int</span> low,<span class="type">int</span> high)</span></span>&#123;</span><br><span class="line">       <span class="type">int</span> p;</span><br><span class="line">       <span class="keyword">if</span>(low &lt; high)&#123;</span><br><span class="line">           p = <span class="built_in">pattion</span>(nums, low, high);</span><br><span class="line">           <span class="built_in">QuickSort</span>(nums, low, p);</span><br><span class="line">           <span class="built_in">QuickSort</span>(nums, p<span class="number">+1</span>, high);</span><br><span class="line">       &#125;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="function"><span class="type">int</span> <span class="title">pattion</span><span class="params">(<span class="type">int</span>* nums, <span class="type">int</span> low, <span class="type">int</span> high)</span></span>&#123;</span><br><span class="line">       <span class="type">int</span> temp = nums[low];</span><br><span class="line">       <span class="type">int</span> pivot = nums[low];</span><br><span class="line">       <span class="keyword">while</span>(low&lt;high)&#123;</span><br><span class="line">           <span class="keyword">while</span>(low&lt;high &amp;&amp; nums[high] &gt; pivot) high--;</span><br><span class="line">           nums[low] = nums[high];</span><br><span class="line">           <span class="keyword">while</span>(low&lt;high &amp;&amp; nums[low] &lt; pivot) low++;</span><br><span class="line">           nums[high] = nums[low];</span><br><span class="line">       &#125;</span><br><span class="line">       nums[low] = temp;</span><br><span class="line">       <span class="keyword">return</span> low;</span><br><span class="line">   &#125;</span><br><span class="line">该方法有点问题，显示overflow，但是技术可行</span><br></pre></td></tr></table></figure></p></blockquote>]]></content>
      
      
      
        <tags>
            
            <tag> leetcode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>关于若以框架本地导入新增自己的模块生成主子表运行出现无法同时新增和修改数据的问题的解答</title>
      <link href="/2023/03/04/%E5%85%B3%E4%BA%8E%E8%8B%A5%E4%BB%A5%E6%A1%86%E6%9E%B6%E6%9C%AC%E5%9C%B0%E5%AF%BC%E5%85%A5%E6%96%B0%E5%A2%9E%E8%87%AA%E5%B7%B1%E7%9A%84%E6%A8%A1%E5%9D%97%E7%94%9F%E6%88%90%E4%B8%BB%E5%AD%90%E8%A1%A8%E8%BF%90%E8%A1%8C%E5%87%BA%E7%8E%B0%E6%97%A0%E6%B3%95%E5%90%8C%E6%97%B6%E6%96%B0%E5%A2%9E%E5%92%8C%E4%BF%AE%E6%94%B9%E6%95%B0%E6%8D%AE%E7%9A%84%E9%97%AE%E9%A2%98%E7%9A%84%E8%A7%A3%E7%AD%94/"/>
      <url>/2023/03/04/%E5%85%B3%E4%BA%8E%E8%8B%A5%E4%BB%A5%E6%A1%86%E6%9E%B6%E6%9C%AC%E5%9C%B0%E5%AF%BC%E5%85%A5%E6%96%B0%E5%A2%9E%E8%87%AA%E5%B7%B1%E7%9A%84%E6%A8%A1%E5%9D%97%E7%94%9F%E6%88%90%E4%B8%BB%E5%AD%90%E8%A1%A8%E8%BF%90%E8%A1%8C%E5%87%BA%E7%8E%B0%E6%97%A0%E6%B3%95%E5%90%8C%E6%97%B6%E6%96%B0%E5%A2%9E%E5%92%8C%E4%BF%AE%E6%94%B9%E6%95%B0%E6%8D%AE%E7%9A%84%E9%97%AE%E9%A2%98%E7%9A%84%E8%A7%A3%E7%AD%94/</url>
      
        <content type="html"><![CDATA[<h1 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h1><p>导入若依本地新增模块，使用主子表生成新模块，出现主表或子表无法完成在一个页面上新增和修改数据的情况，只能成功完成其中一个功能。</p><hr><h1 id="原因分析："><a href="#原因分析：" class="headerlink" title="原因分析："></a>原因分析：</h1><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/** 提交按钮 */</span></span><br><span class="line">    <span class="title function_">submitForm</span>(<span class="params"></span>) &#123;</span><br><span class="line">      <span class="variable language_">this</span>.<span class="property">$refs</span>[<span class="string">&quot;form&quot;</span>].<span class="title function_">validate</span>(<span class="function"><span class="params">valid</span> =&gt;</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (valid) &#123;</span><br><span class="line">          <span class="keyword">if</span> (<span class="variable language_">this</span>.<span class="property">form</span>.<span class="property">id</span> != <span class="literal">null</span>) &#123;</span><br><span class="line">            <span class="title function_">updateResidentinfo</span>(<span class="variable language_">this</span>.<span class="property">form</span>).<span class="title function_">then</span>(<span class="function"><span class="params">response</span> =&gt;</span> &#123;</span><br><span class="line">              <span class="variable language_">this</span>.<span class="property">$modal</span>.<span class="title function_">msgSuccess</span>(<span class="string">&quot;修改成功&quot;</span>);</span><br><span class="line">              <span class="variable language_">this</span>.<span class="property">open</span> = <span class="literal">false</span>;</span><br><span class="line">              <span class="variable language_">this</span>.<span class="title function_">getList</span>();</span><br><span class="line">            &#125;);</span><br><span class="line">          &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="title function_">addResidentinfo</span>(<span class="variable language_">this</span>.<span class="property">form</span>).<span class="title function_">then</span>(<span class="function"><span class="params">response</span> =&gt;</span> &#123;</span><br><span class="line">              <span class="variable language_">this</span>.<span class="property">$modal</span>.<span class="title function_">msgSuccess</span>(<span class="string">&quot;新增成功&quot;</span>);</span><br><span class="line">              <span class="variable language_">this</span>.<span class="property">open</span> = <span class="literal">false</span>;</span><br><span class="line">              <span class="variable language_">this</span>.<span class="title function_">getList</span>();</span><br><span class="line">            &#125;);</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;);</span><br><span class="line">    &#125;,</span><br></pre></td></tr></table></figure><h2 id="gt-可以看到，这里使用的判断依据是id是否新的变化，但是这导致了一个问题，我的判断依据如果是id，那么如果我是修改，他不会出问题，因为它可以使用update，可是如果我是新增，那么它这时候就要用到insert才对（这个可以从系统监控的数据监控下看到），可是他还是会使用update，这边会导致update报错，因为没有这个数据项"><a href="#gt-可以看到，这里使用的判断依据是id是否新的变化，但是这导致了一个问题，我的判断依据如果是id，那么如果我是修改，他不会出问题，因为它可以使用update，可是如果我是新增，那么它这时候就要用到insert才对（这个可以从系统监控的数据监控下看到），可是他还是会使用update，这边会导致update报错，因为没有这个数据项" class="headerlink" title="&gt;可以看到，这里使用的判断依据是id是否新的变化，但是这导致了一个问题，我的判断依据如果是id，那么如果我是修改，他不会出问题，因为它可以使用update，可是如果我是新增，那么它这时候就要用到insert才对（这个可以从系统监控的数据监控下看到），可是他还是会使用update，这边会导致update报错，因为没有这个数据项"></a>&gt;可以看到，这里使用的判断依据是id是否新的变化，但是这导致了一个问题，我的判断依据如果是id，那么如果我是修改，他不会出问题，因为它可以使用update，可是如果我是新增，那么它这时候就要用到insert才对（这个可以从系统监控的数据监控下看到），可是他还是会使用update，这边会导致update报错，因为没有这个数据项</h2><p><img src="https://i-blog.csdnimg.cn/blog_migrate/d0a856b6c3492d58eee489708302933a.png" alt="在这里插入图片描述"><br><code>在这里可以看到自己的每一步操作用到的sql语句</code></p><h1 id="解决方案："><a href="#解决方案：" class="headerlink" title="解决方案："></a>解决方案：</h1><p>如下图：<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//在data中增加个字段用来判断当前状态</span></span><br><span class="line"><span class="title function_">data</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> &#123;</span><br><span class="line">      <span class="attr">isAdd</span>: <span class="literal">true</span>,</span><br><span class="line"> </span><br><span class="line"><span class="comment">//在新增和修改时，改变状态值</span></span><br><span class="line">    <span class="comment">/** 新增按钮操作 */</span></span><br><span class="line">    <span class="title function_">handleAdd</span>(<span class="params"></span>) &#123;</span><br><span class="line">      <span class="variable language_">this</span>.<span class="title function_">reset</span>();</span><br><span class="line">      <span class="variable language_">this</span>.<span class="property">open</span> = <span class="literal">true</span>;</span><br><span class="line">      <span class="variable language_">this</span>.<span class="property">title</span> = <span class="string">&quot;添加居民信息&quot;</span>;</span><br><span class="line">      <span class="variable language_">this</span>.<span class="property">isAdd</span> = <span class="literal">true</span>;<span class="comment">//修改状态</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="comment">/** 修改按钮操作 */</span></span><br><span class="line">    <span class="title function_">handleUpdate</span>(<span class="params">row</span>) &#123;</span><br><span class="line">      <span class="variable language_">this</span>.<span class="title function_">reset</span>();</span><br><span class="line">      <span class="keyword">const</span> idcardInfo = row.<span class="property">idcardInfo</span> || <span class="variable language_">this</span>.<span class="property">ids</span></span><br><span class="line">      <span class="title function_">getResidentinfo</span>(idcardInfo).<span class="title function_">then</span>(<span class="function"><span class="params">response</span> =&gt;</span> &#123;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">form</span> = response.<span class="property">data</span>;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">open</span> = <span class="literal">true</span>;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">title</span> = <span class="string">&quot;修改居民信息&quot;</span>;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">isAdd</span> = <span class="literal">false</span>;<span class="comment">//修改状态</span></span><br><span class="line">      &#125;);</span><br><span class="line">    &#125;,</span><br><span class="line"> </span><br><span class="line"><span class="comment">//点击确认按钮时就不判断id了，判断isAdd状态</span></span><br><span class="line"> <span class="comment">/** 提交按钮 */</span></span><br><span class="line">    <span class="title function_">submitForm</span>(<span class="params"></span>) &#123;</span><br><span class="line">      <span class="variable language_">this</span>.<span class="property">$refs</span>[<span class="string">&quot;form&quot;</span>].<span class="title function_">validate</span>(<span class="function"><span class="params">valid</span> =&gt;</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (valid) &#123;</span><br><span class="line">          <span class="keyword">if</span> (<span class="variable language_">this</span>.<span class="property">isAdd</span> == <span class="literal">false</span>) &#123;<span class="comment">//判断isAdd是否位false</span></span><br><span class="line">            <span class="title function_">updateResidentinfo</span>(<span class="variable language_">this</span>.<span class="property">form</span>).<span class="title function_">then</span>(<span class="function"><span class="params">response</span> =&gt;</span> &#123;</span><br><span class="line">              <span class="variable language_">this</span>.<span class="property">$modal</span>.<span class="title function_">msgSuccess</span>(<span class="string">&quot;修改成功&quot;</span>);</span><br><span class="line">              <span class="variable language_">this</span>.<span class="property">open</span> = <span class="literal">false</span>;</span><br><span class="line">              <span class="variable language_">this</span>.<span class="title function_">getList</span>();</span><br><span class="line">            &#125;);</span><br><span class="line">          &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="title function_">addResidentinfo</span>(<span class="variable language_">this</span>.<span class="property">form</span>).<span class="title function_">then</span>(<span class="function"><span class="params">response</span> =&gt;</span> &#123;</span><br><span class="line">              <span class="variable language_">this</span>.<span class="property">$modal</span>.<span class="title function_">msgSuccess</span>(<span class="string">&quot;新增成功&quot;</span>);</span><br><span class="line">              <span class="variable language_">this</span>.<span class="property">open</span> = <span class="literal">false</span>;</span><br><span class="line">              <span class="variable language_">this</span>.<span class="title function_">getList</span>();</span><br><span class="line">            &#125;);</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;);</span><br><span class="line">    &#125;,</span><br></pre></td></tr></table></figure></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>若依前后端分离版框架导入并更改项目名称成功运行</title>
      <link href="/2023/02/28/%E8%8B%A5%E4%BE%9D%E5%89%8D%E5%90%8E%E7%AB%AF%E5%88%86%E7%A6%BB%E7%89%88%E6%A1%86%E6%9E%B6%E5%AF%BC%E5%85%A5%E5%B9%B6%E6%9B%B4%E6%94%B9%E9%A1%B9%E7%9B%AE%E5%90%8D%E7%A7%B0%E6%88%90%E5%8A%9F%E8%BF%90%E8%A1%8C/"/>
      <url>/2023/02/28/%E8%8B%A5%E4%BE%9D%E5%89%8D%E5%90%8E%E7%AB%AF%E5%88%86%E7%A6%BB%E7%89%88%E6%A1%86%E6%9E%B6%E5%AF%BC%E5%85%A5%E5%B9%B6%E6%9B%B4%E6%94%B9%E9%A1%B9%E7%9B%AE%E5%90%8D%E7%A7%B0%E6%88%90%E5%8A%9F%E8%BF%90%E8%A1%8C/</url>
      
        <content type="html"><![CDATA[<blockquote><p>最近在写生产实习和毕业设计，根据学长的指导知道了有若依框架这种神器，也因此走上了若依框架的道路。<br>具体教程也可以使用官方教程<br><a href="http://doc.ruoyi.vip/ruoyi/other/faq.html#%E5%A6%82%E4%BD%95%E6%9B%B4%E6%8D%A2%E9%A1%B9%E7%9B%AE%E5%8C%85%E8%B7%AF%E5%BE%84">http://doc.ruoyi.vip/ruoyi/other/faq.html#%E5%A6%82%E4%BD%95%E6%9B%B4%E6%8D%A2%E9%A1%B9%E7%9B%AE%E5%8C%85%E8%B7%AF%E5%BE%84</a></p></blockquote><hr><h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>若依项目克隆地址：<br><a href="https://gitee.com/y_project/RuoYi-Vue.git">https://gitee.com/y_project/RuoYi-Vue.git</a><br><code>提示：项目克隆后不要着急上手</code><br><code>养成良好的习惯，将环境相关文件都放在统一的文件夹下，便于管理和更新</code></p><hr><h1 id="一、环境准备"><a href="#一、环境准备" class="headerlink" title="一、环境准备"></a>一、环境准备</h1><p>Mysql：<a href="https://dev.mysql.com/downloads/mysql/">https://dev.mysql.com/downloads/mysql/</a><br><code>下载ZIPArichoive版本</code><br>Navicate<code>随便下那个版本，最好可以长期使用</code><br>NodeJs<code>下载17.0.0以下版本，否则会产生不必要的问题</code><br>Redis<code>官网下载即可</code><br>Maven<code>建议配置3.6.5版本</code></p><h1 id="二、更改项目名称"><a href="#二、更改项目名称" class="headerlink" title="二、更改项目名称"></a>二、更改项目名称</h1><h6 id="1-官网下载项目压缩包"><a href="#1-官网下载项目压缩包" class="headerlink" title="1.官网下载项目压缩包"></a>1.官网下载项目压缩包</h6><h6 id="2-更改ruoyi-vue文件夹名称-如下图"><a href="#2-更改ruoyi-vue文件夹名称-如下图" class="headerlink" title="2.更改ruoyi-vue文件夹名称,如下图"></a>2.更改ruoyi-vue文件夹名称,如下图</h6><p><img src="https://i-blog.csdnimg.cn/blog_migrate/693e128058c78092c43443697b051724.png" alt="在这里插入图片描述"><br><img src="https://i-blog.csdnimg.cn/blog_migrate/26248845325b73be686be0e7ef31171e.png" alt="在这里插入图片描述"><br><code>更改如下图</code><br><img src="https://i-blog.csdnimg.cn/blog_migrate/74d04ea2d76d78c3b313e15152253911.png" alt="在这里插入图片描述"></p><p><code>同时更改文件夹内部相关名称</code></p><p><img src="https://i-blog.csdnimg.cn/blog_migrate/edb44443bc4ddbafdd4ef84b6e78ccd7.png" alt="在这里插入图片描述"><br><code>最好改如下图：&#123;ProjectName&#125;-~~~</code><br><img src="https://i-blog.csdnimg.cn/blog_migrate/b017f22cd54d5de5db446d02e4e9c3eb.png" alt="在这里插入图片描述"><br><code>选中区域为我后面新建的module，后面再说</code><br><img src="https://i-blog.csdnimg.cn/blog_migrate/d79a02a68b821934fa8b653305659c8d.png" alt="在这里插入图片描述"><br>更改每个如上图的名称至👇<br><img src="https://i-blog.csdnimg.cn/blog_migrate/1b42558bb25ce4c74a6aa9567e0940b1.png" alt="在这里插入图片描述"></p><p><code>yrwang是我的英文名，也是我用在项目里的url</code></p><h6 id="3-用idea打开，进行相关的更改👇"><a href="#3-用idea打开，进行相关的更改👇" class="headerlink" title="3.用idea打开，进行相关的更改👇"></a>3.用idea打开，进行相关的更改👇</h6><p><code>打开会报错，不用怕，继续跟我做</code><br><img src="https://i-blog.csdnimg.cn/blog_migrate/8b14ddc2f64fef8c8e90df9ebe237595.png" alt="在这里插入图片描述"><br><img src="https://i-blog.csdnimg.cn/blog_migrate/8b8f285163f76d094d3bfaf94cfcb4a9.png" alt="在这里插入图片描述"></p><p><code>将上图部分ruoyi等部分进行更改</code><br><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">   &lt;groupId&gt;com.yrwang&lt;/groupId&gt;</span><br><span class="line">   &lt;artifactId&gt;ManagementSystem&lt;/artifactId&gt;</span><br><span class="line">   &lt;version&gt;<span class="number">3.8</span><span class="number">.5</span>&lt;/version&gt;</span><br><span class="line"></span><br><span class="line">   &lt;name&gt;ManagementSystem&lt;/name&gt;</span><br><span class="line">   &lt;url&gt;http:<span class="comment">//www.ruoyi.vip&lt;/url&gt;</span></span><br><span class="line">   &lt;description&gt;管理系统&lt;/description&gt;</span><br><span class="line">   </span><br><span class="line">&lt;properties&gt;</span><br><span class="line">    &lt;ManagementSystem.version&gt;<span class="number">3.8</span><span class="number">.5</span>&lt;/ManagementSystem.version&gt;</span><br></pre></td></tr></table></figure><br><code>groupid填入自己更改的公司名，artifactId填入自己的项目名称</code></p><p><code>翻到最下面，该部分及以上，涉及到ruoyi部分都要更改</code><br><img src="https://i-blog.csdnimg.cn/blog_migrate/fbfbd101f6d5640a66bd1a396ae07ee9.png" alt="在这里插入图片描述"><br><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">        &lt;!-- 通用工具--&gt;</span><br><span class="line">        &lt;dependency&gt;</span><br><span class="line">            &lt;groupId&gt;com.yrwang&lt;/groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;ManagementSystem-common&lt;/artifactId&gt;</span><br><span class="line">            &lt;version&gt;$&#123;ManagementSystem.version&#125;&lt;/version&gt;</span><br><span class="line">        &lt;/dependency&gt;</span><br><span class="line"></span><br><span class="line">    &lt;/dependencies&gt;</span><br><span class="line">&lt;/dependencyManagement&gt;</span><br><span class="line"></span><br><span class="line">&lt;modules&gt;</span><br><span class="line">    &lt;module&gt;ManagementSystem-admin&lt;/module&gt;</span><br><span class="line">    &lt;module&gt;ManagementSystem-framework&lt;/module&gt;</span><br><span class="line">    &lt;module&gt;ManagementSystem-system&lt;/module&gt;</span><br><span class="line">    &lt;module&gt;ManagementSystem-quartz&lt;/module&gt;</span><br><span class="line">    &lt;module&gt;ManagementSystem-generator&lt;/module&gt;</span><br><span class="line">    &lt;module&gt;ManagementSystem-common&lt;/module&gt;</span><br><span class="line">&lt;/modules&gt;</span><br></pre></td></tr></table></figure><br>由此，maven中便出现了module，不过这时候还不对</p><h6 id="4-对子项目的各个pom-xml进行相关的修改，修改同上"><a href="#4-对子项目的各个pom-xml进行相关的修改，修改同上" class="headerlink" title="4.对子项目的各个pom.xml进行相关的修改，修改同上"></a>4.对子项目的各个pom.xml进行相关的修改，修改同上</h6><p><img src="https://i-blog.csdnimg.cn/blog_migrate/72fdfb213f37a655e7fec7f61a9322d1.png" alt="在这里插入图片描述"><br>修改完进行maven的刷新，完毕<br><img src="https://i-blog.csdnimg.cn/blog_migrate/6eceef4bc2ec7bbcbac36404c0d93d0a.png" alt="在这里插入图片描述"></p><h6 id="5-更改文件路径"><a href="#5-更改文件路径" class="headerlink" title="5.更改文件路径"></a>5.更改文件路径</h6><p><code>修改完每个子模块后使用crtl+shift+r打开全局替换，替换package com.ruoyi和import com.ruoyi以及&lt;mapper namespace=&quot;com.ruoyi如下图所示：</code><br><img src="https://i-blog.csdnimg.cn/blog_migrate/abcfe65d84b1c33d8e72fdcbfe2ecbd3.png" alt="在这里插入图片描述"><br><img src="https://i-blog.csdnimg.cn/blog_migrate/6ee677685d3abef43fba8ea80f71d96a.png" alt="在这里插入图片描述"><br><img src="https://i-blog.csdnimg.cn/blog_migrate/52610dddaf03edf69a0746f5acb29872.png" alt="在这里插入图片描述"></p><h6 id="7-修改yml配置文件"><a href="#7-修改yml配置文件" class="headerlink" title="7.修改yml配置文件"></a>7.修改yml配置文件</h6><p><img src="https://i-blog.csdnimg.cn/blog_migrate/337a0cfb8976ae45bb8413447cc12773.png" alt="在这里插入图片描述"><br><code>此处更改不用多说，另外该文件内其他可自行修改</code><br><img src="https://i-blog.csdnimg.cn/blog_migrate/3f03779551db5cdba4f46bdca1871d97.png" alt="在这里插入图片描述"><br><code>修改数据库相关配置，写为自己的配置</code><br><img src="https://i-blog.csdnimg.cn/blog_migrate/cc861a6b87aae5b0cf3fb7b117761039.png" alt="在这里插入图片描述"><br><code>以下更改是容易被遗忘的</code><br><img src="https://i-blog.csdnimg.cn/blog_migrate/327277f739181e63ef80d86f37f2a59e.png" alt="在这里插入图片描述"><br><img src="https://i-blog.csdnimg.cn/blog_migrate/e062d52905f973d32f088738bd1af9cc.png" alt="在这里插入图片描述"><br><img src="https://i-blog.csdnimg.cn/blog_migrate/156fdfc6bc5658e4c6b6ba7178b51802.png" alt="在这里插入图片描述"><br><img src="https://i-blog.csdnimg.cn/blog_migrate/de13ee2dc36c2338b569a64b8d9da5c5.png" alt="在这里插入图片描述"><br>最终，运行成功<br><img src="https://i-blog.csdnimg.cn/blog_migrate/479e0dda72fc4dc8b9206e473b279799.png" alt="在这里插入图片描述"></p><h1 id="三、运行前端"><a href="#三、运行前端" class="headerlink" title="三、运行前端"></a>三、运行前端</h1><p>进入官网<a href="http://doc.ruoyi.vip/ruoyi-vue/document/spjc.html">http://doc.ruoyi.vip/ruoyi.vue/document/spjc.html</a><br><img src="https://i-blog.csdnimg.cn/blog_migrate/776a8f8e0d05a050acabd916ca020175.png" alt="在这里插入图片描述"><br><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"># 进入项目目录</span><br><span class="line">cd ruoyi-ui</span><br><span class="line"></span><br><span class="line"># 安装依赖</span><br><span class="line">npm install</span><br><span class="line"></span><br><span class="line"># 强烈建议不要用直接使用 cnpm 安装，会有各种诡异的 bug，可以通过重新指定 registry 来解决 npm 安装速度慢的问题。</span><br><span class="line">npm install --registry=https:<span class="comment">//registry.npmmirror.com</span></span><br><span class="line"></span><br><span class="line"># 本地开发 启动项目</span><br><span class="line">npm run dev</span><br></pre></td></tr></table></figure><br>运行成功即可</p><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>第二遍进行若依项目的复刻，想到自己也是一个小白，也是这么走过来，于是将这些东西分享给大家。</p>]]></content>
      
      
      
        <tags>
            
            <tag> 前端、若依 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MySql简单安装配置</title>
      <link href="/2023/02/28/MySql%E7%AE%80%E5%8D%95%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AE/"/>
      <url>/2023/02/28/MySql%E7%AE%80%E5%8D%95%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AE/</url>
      
        <content type="html"><![CDATA[<blockquote><p>记录一下部分工作流程</p></blockquote><hr><h1 id="安装步骤"><a href="#安装步骤" class="headerlink" title="安装步骤"></a>安装步骤</h1><h2 id="1-下载官网免安装版本"><a href="#1-下载官网免安装版本" class="headerlink" title="1.下载官网免安装版本"></a>1.下载官网免安装版本</h2><blockquote><p>至于为什么要下载免安装版，因为自动安装不能设置安装目录，且不容易删除彻底，为了避免以后的麻烦，还是现在麻烦点好</p></blockquote><p>官网直达：<a href="https://dev.mysql.com/downloads/mysql/">https://dev.mysql.com/downloads/mysql/</a><br><img src="https://i-blog.csdnimg.cn/blog_migrate/6c196f9d772fdd62c3b9f0a716a0560d.png" alt="在这里插入图片描述"></p><blockquote><p>选择小包那个安装</p></blockquote><hr><h2 id="2-解压"><a href="#2-解压" class="headerlink" title="2.解压"></a>2.解压</h2><p><img src="https://i-blog.csdnimg.cn/blog_migrate/9986c8b7c8f0829e2b4c919ecab605f0.png" alt="在这里插入图片描述"><br><img src="https://i-blog.csdnimg.cn/blog_migrate/93215e03447cb6cb604d66552cc3dece.png" alt="在这里插入图片描述"></p><hr><h2 id="3-配置环境变量"><a href="#3-配置环境变量" class="headerlink" title="3.配置环境变量"></a>3.配置环境变量</h2><p><code>配置变量名</code></p><blockquote><p>MYSQL_HOME：mysql安装目录<br>在path中添加%MYSQL_HOME%\bin</p></blockquote><p>完成环境变量配置</p><hr><h2 id="4-配置my-ini文件"><a href="#4-配置my-ini文件" class="headerlink" title="4.配置my.ini文件"></a>4.配置my.ini文件</h2><blockquote><p><img src="https://i-blog.csdnimg.cn/blog_migrate/31f671a7a3afc70f44950fce0fe501b4.png" alt="在这里插入图片描述"><br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">[mysql]</span><br><span class="line"># 设置mysql客户端默认字符集</span><br><span class="line"><span class="keyword">default</span>-character-set=utf8</span><br><span class="line">[mysqld]</span><br><span class="line"># 设置<span class="number">3306</span>端口</span><br><span class="line">port = <span class="number">3306</span></span><br><span class="line"># 设置mysql的安装目录</span><br><span class="line">basedir = <span class="attr">D</span>:\\<span class="title class_">Environment</span>\\<span class="title class_">MySql</span>\\mysql_8<span class="number">.0</span><span class="number">.32</span></span><br><span class="line"># 设置mysql数据库的数据的存放目录</span><br><span class="line">datadir = <span class="attr">D</span>:\\mysql\\mysql_8<span class="number">.0</span><span class="number">.32</span>\\data</span><br><span class="line"># 允许最大连接数</span><br><span class="line">max_connections=<span class="number">20</span></span><br><span class="line"># 服务端使用的字符集默认为<span class="number">8</span>比特编码的latin1字符集</span><br><span class="line">character-set-server=utf8</span><br><span class="line"># 创建新表时将使用的默认存储引擎</span><br><span class="line"><span class="keyword">default</span>-storage-engine=<span class="variable constant_">INNODB</span></span><br><span class="line"># 创建模式</span><br><span class="line">sql_mode = <span class="variable constant_">NO_ENGINE_SUBSTITUTION</span>,<span class="variable constant_">STRICT_TRANS_TABLES</span></span><br><span class="line"></span><br></pre></td></tr></table></figure></p><h2 id="5-进入bin文件夹（cmd管理员模式）"><a href="#5-进入bin文件夹（cmd管理员模式）" class="headerlink" title="5.进入bin文件夹（cmd管理员模式）"></a>5.进入bin文件夹（cmd管理员模式）</h2><p><img src="https://i-blog.csdnimg.cn/blog_migrate/a08ab524171ad7dfb5105310f8671b6b.png" alt="在这里插入图片描述"><br>输入mysqld —initialize 进行初始化mysql。<br><img src="https://i-blog.csdnimg.cn/blog_migrate/28c562328bb78ab4296b4088fc5f1a04.png" alt="在这里插入图片描述"><br><code>这里进入新生成的data文件夹</code><br><img src="https://i-blog.csdnimg.cn/blog_migrate/3fcadf142c4d3ed7c02e6ab394d84569.png" alt="在这里插入图片描述"><br><code>找到一个名为“计算机名.err”的文件，打开，内部有初始密码👇</code><br><img src="https://i-blog.csdnimg.cn/blog_migrate/0a66fa9770b60ed5c8c1af00009933c0.png" alt="在这里插入图片描述"><br><code>此处搜索temperary password即可，临时密码在root@localhost后</code></p></blockquote><p>随后打开cmd，若已安装mysql则先执行mysql服务卸载操作<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sc delete mysql</span><br></pre></td></tr></table></figure><br>随后打开cmd进入安装文件夹内bin子文件夹下，执行如下操作<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysqld --install</span><br></pre></td></tr></table></figure><br>成功则提示<code>Service successfully installed</code><br>若提示<code>Install/Remove of the Service Denied!</code>请先以管理员身份进入该文件夹下再进行相关操作<br>随后同样在该文件夹下，执行以下命令<br><code>net start mysql</code><br>提示 <code>Mysql服务已启动成功</code></p><blockquote><p>若此处产生如下问题：<br>MySql服务启动失败，或者MySql服务启动成功后在执行之后的相关操作提示失败查看服务发现mysql服务停止，则进行如下操作：<br>1.删除服务后重装服务<br>2.查看my.ini文件中是否有skip-grant-tables，如果有，注释或删除<br>3.删除data文件夹，重新初始化</p></blockquote><p>继续：更新root账户密码<br>在bin文件夹下启动管理员cmd，如下指令<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql -u root –p</span><br></pre></td></tr></table></figure><br>提示输入password，直接把之前的临时密码粘贴过来，回车，进入mysql控制界面，输入：<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">alter user &#x27;root&#x27;@&#x27;localhost&#x27; identified with mysql_native_password by &#x27; **这里填写新密码** &#x27;;</span><br></pre></td></tr></table></figure><br>ok，大功告成。</p><h2 id="6-下载navicat15或16Premium"><a href="#6-下载navicat15或16Premium" class="headerlink" title="6.下载navicat15或16Premium"></a>6.下载navicat15或16Premium</h2><p>无法长期使用请参照其他博主，有完美解决方法<br><img src="https://i-blog.csdnimg.cn/blog_migrate/fe58b93a9ca6506333b26fd9b7b4e4b9.png" alt="在这里插入图片描述"><br>左上角新建连接，输入mysql及其账号密码<br>在新生成的数据库下建立新的database，然后就可以开始数据库的设计了，建议还是使用sql语言进行数据库的建立，很多附加的条件只有sql语言能实现。</p><hr><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>以上即为Mysql环境安装的全部过程及其中可能遇到的一些问题的解答记录，希望能对初学的人能有些帮助。</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>关于电脑已连接wifi但是无法正常上网的问题解决方法</title>
      <link href="/2023/02/28/%E5%85%B3%E4%BA%8ENodeJs%E8%BF%90%E8%A1%8Cnpm%E4%BA%A7%E7%94%9F0308010C%E6%88%9603000086%E9%97%AE%E9%A2%98%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/"/>
      <url>/2023/02/28/%E5%85%B3%E4%BA%8ENodeJs%E8%BF%90%E8%A1%8Cnpm%E4%BA%A7%E7%94%9F0308010C%E6%88%9603000086%E9%97%AE%E9%A2%98%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/</url>
      
        <content type="html"><![CDATA[<h1 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h1><p><code>问题：安装完nodejs后使用npm install产生如下问题</code></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">opensslErrorStack: [ <span class="string">&#x27;error:03000086:digital envelope routines::initialization error&#x27;</span> ],</span><br><span class="line">library: <span class="string">&#x27;digital envelope routines&#x27;</span>,</span><br><span class="line">reason: <span class="string">&#x27;unsupported&#x27;</span>,</span><br><span class="line">code: <span class="string">&#x27;ERR_OSSL_EVP_UNSUPPORTED&#x27;</span></span><br></pre></td></tr></table></figure><hr><h1 id="解决方案："><a href="#解决方案：" class="headerlink" title="解决方案："></a>解决方案：</h1><blockquote><p>在系统环境变量中新建如下环境变量<br>变量名<code>NODE_OPTIONS</code><br>变量值<code>--openssl-legacy-provider</code><br>重启电脑，ok，正常使用</p></blockquote>]]></content>
      
      
      
        <tags>
            
            <tag> 网络 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>文件管理（关于分页系统&amp;基于Centos&amp;C语言）</title>
      <link href="/2021/12/02/Matlab%E9%9F%B3%E4%B9%90%E9%94%AE%E7%9B%98%E4%BB%BF%E7%9C%9F%E7%B3%BB%E7%BB%9F%E7%9A%84%E8%AE%BE%E8%AE%A1%E4%B8%8E%E5%AE%9E%E7%8E%B0/"/>
      <url>/2021/12/02/Matlab%E9%9F%B3%E4%B9%90%E9%94%AE%E7%9B%98%E4%BB%BF%E7%9C%9F%E7%B3%BB%E7%BB%9F%E7%9A%84%E8%AE%BE%E8%AE%A1%E4%B8%8E%E5%AE%9E%E7%8E%B0/</url>
      
        <content type="html"><![CDATA[<h2 id="Matlab：一个音乐键盘仿真系统的设计与实现"><a href="#Matlab：一个音乐键盘仿真系统的设计与实现" class="headerlink" title="Matlab：一个音乐键盘仿真系统的设计与实现"></a>Matlab：一个音乐键盘仿真系统的设计与实现</h2><hr><blockquote><h4 id="实现功能："><a href="#实现功能：" class="headerlink" title="实现功能："></a>实现功能：</h4><p>1：设计音乐键盘GUI界面，实现单音键盘的发声。<br>2：实现键盘的双音多频，即每个键盘对应低音频组的一个频率和高音频组的一个频率，实现按键发出双音。<br>3：能够演奏一段音乐。 <br>4：能够在动态框输入想要的曲谱，并且将之播放。</p></blockquote><h3 id="概要设计"><a href="#概要设计" class="headerlink" title="概要设计"></a>概要设计</h3><blockquote><h5 id="模块一：单音音乐键盘"><a href="#模块一：单音音乐键盘" class="headerlink" title="模块一：单音音乐键盘"></a>模块一：单音音乐键盘</h5><p>&emsp;音键对应声音算法实现：<br>&emsp;&emsp;音频确定函数gen_wave()：设计一个数组用于保存小字组至小字&emsp;二组36键声音的频率，采样频率使用8192Hz，在确定音频选择的情况下进行发声频率的计算，返回发声频率<br>&emsp;&emsp;音频播放函数sound（a，b）:为matlab自带函数，参数有两个，a为发声频率，由音频确定函数返回，b为音长及ryhme由音长选择功能返回；<br>具体算法：将每个按键设置为pushbutton，使用其callback函数，根据pushbutton的tag调用sound和音频确定函数gen_wave，在点击时进行相应计算，并返回声音<br><img src="https://img2020.cnblogs.com/blog/2231345/202112/2231345-20211202155233943-910240856.png" alt="image"></p><h5 id="模块二：音长选择"><a href="#模块二：音长选择" class="headerlink" title="模块二：音长选择"></a>模块二：音长选择</h5><p>使用switch函数，根据hObject的返回tag设置rhyme</p><h5 id="模块三：音频选择（单音，双音多频）及音乐键盘的双音多频设计"><a href="#模块三：音频选择（单音，双音多频）及音乐键盘的双音多频设计" class="headerlink" title="模块三：音频选择（单音，双音多频）及音乐键盘的双音多频设计"></a>模块三：音频选择（单音，双音多频）及音乐键盘的双音多频设计</h5><p>使用switch函数，根据hObject的返回tag设置voiceChoice</p><h5 id="模块四：文件演奏方式选择"><a href="#模块四：文件演奏方式选择" class="headerlink" title="模块四：文件演奏方式选择"></a>模块四：文件演奏方式选择</h5><p>使用switch函数，根据hObject的返回tag设置playChoice</p><h5 id="模块五：读取文件演奏"><a href="#模块五：读取文件演奏" class="headerlink" title="模块五：读取文件演奏"></a>模块五：读取文件演奏</h5><p><img src="https://img2020.cnblogs.com/blog/2231345/202112/2231345-20211202155129359-276750689.png" alt="image"></p><h5 id="模块六：动态编辑乐谱演奏及其保存"><a href="#模块六：动态编辑乐谱演奏及其保存" class="headerlink" title="模块六：动态编辑乐谱演奏及其保存"></a>模块六：动态编辑乐谱演奏及其保存</h5><p><img src="https://img2020.cnblogs.com/blog/2231345/202112/2231345-20211202155151369-1859176153.png" alt="image"></p></blockquote><h3 id="详细设计"><a href="#详细设计" class="headerlink" title="详细设计"></a>详细设计</h3><blockquote><p>(一)音乐键盘</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br></pre></td><td class="code"><pre><span class="line">Gen_wave函数：</span><br><span class="line">function y = gen_wave( tone, rythm )%tone为音节，rhyme为音拍即音长</span><br><span class="line">global voiceChoice;</span><br><span class="line">    Fs = 8192;</span><br><span class="line">    freqs = [262, 294, 330, 349, 392, 440, 494, 277, 311, 370, 415, 466, 523, 587, 659, 698, 783, 880, 988, 554, 622, 740, 831, 942, 1046, 1175, 1318, 1397, 1568, 1760, 1967, 1109, 1245, 1480, 1661, 1865];</span><br><span class="line">    x = linspace(0, 2 * pi * rythm, floor(Fs * rythm));</span><br><span class="line">    if voiceChoice==1</span><br><span class="line">        y = sin(freqs(tone) * x) .*(1- x/(rythm * 2 *pi));</span><br><span class="line">    elseif voiceChoice==0</span><br><span class="line">        y = sin(freqs(tone) * x) .*(1- x/(rythm * 2 *pi))+0.2.*sin(2*freqs(tone) * x) .*(1- x/(rythm * 2 *pi))+0.05.*sin(4*freqs(tone) * x) .*(1- x/(rythm * 2 *pi));</span><br><span class="line">    end</span><br><span class="line">end</span><br><span class="line"></span><br><span class="line">按键设计：</span><br><span class="line">小字组</span><br><span class="line">% --- Executes on button press in c.</span><br><span class="line">function c_Callback(hObject, eventdata, handles)</span><br><span class="line">global ryhme;</span><br><span class="line">global voiceChoice;</span><br><span class="line">y = gen_wave(1,ryhme);</span><br><span class="line">sound(y,8192);</span><br><span class="line"></span><br><span class="line">% --- Executes on button press in d.</span><br><span class="line">function d_Callback(hObject, eventdata, handles)</span><br><span class="line">global ryhme;</span><br><span class="line">global voiceChoice;</span><br><span class="line">y = gen_wave(2,ryhme);</span><br><span class="line">sound(y,8192);</span><br><span class="line"> </span><br><span class="line">% --- Executes on button press in e.</span><br><span class="line">function e_Callback(hObject, eventdata, handles)</span><br><span class="line">global ryhme;</span><br><span class="line">global voiceChoice;</span><br><span class="line">y = gen_wave(3,ryhme);</span><br><span class="line">sound(y,8192);</span><br><span class="line"> </span><br><span class="line">% --- Executes on button press in f.</span><br><span class="line">function f_Callback(hObject, eventdata, handles)</span><br><span class="line">global ryhme;</span><br><span class="line">global voiceChoice;</span><br><span class="line">y = gen_wave(4,ryhme);</span><br><span class="line">sound(y,8192);</span><br><span class="line"> </span><br><span class="line">% --- Executes on button press in g.</span><br><span class="line">function g_Callback(hObject, eventdata, handles)</span><br><span class="line">global ryhme;</span><br><span class="line">global voiceChoice;</span><br><span class="line">y = gen_wave(5,ryhme);</span><br><span class="line">sound(y,8192);</span><br><span class="line"> </span><br><span class="line">% --- Executes on button press in a.</span><br><span class="line">function a_Callback(hObject, eventdata, handles)</span><br><span class="line">global ryhme;</span><br><span class="line">global voiceChoice;</span><br><span class="line">y = gen_wave(6,ryhme);</span><br><span class="line">sound(y,8192);</span><br><span class="line"> </span><br><span class="line">% --- Executes on button press in b.</span><br><span class="line">function b_Callback(hObject, eventdata, handles)</span><br><span class="line">global ryhme;</span><br><span class="line">global voiceChoice;</span><br><span class="line">y = gen_wave(7,ryhme);</span><br><span class="line">sound(y,8192);</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">小字一组</span><br><span class="line">% --- Executes on button press in c1.</span><br><span class="line">function c1_Callback(hObject, eventdata, handles)</span><br><span class="line">global ryhme;</span><br><span class="line">global voiceChoice;</span><br><span class="line">y = gen_wave(13,ryhme);</span><br><span class="line">sound(y,8192);</span><br><span class="line"> </span><br><span class="line">% --- Executes on button press in d1.</span><br><span class="line">function d1_Callback(hObject, eventdata, handles)</span><br><span class="line">global ryhme;</span><br><span class="line">global voiceChoice;</span><br><span class="line">y = gen_wave(14,ryhme);</span><br><span class="line">sound(y,8192);</span><br><span class="line"> </span><br><span class="line">% --- Executes on button press in e1.</span><br><span class="line">function e1_Callback(hObject, eventdata, handles)</span><br><span class="line">global ryhme;</span><br><span class="line">global voiceChoice;</span><br><span class="line">y = gen_wave(15,ryhme);</span><br><span class="line">sound(y,8192);</span><br><span class="line"> </span><br><span class="line">% --- Executes on button press in f1.</span><br><span class="line">function f1_Callback(hObject, eventdata, handles)</span><br><span class="line">global ryhme;</span><br><span class="line">global voiceChoice;</span><br><span class="line">y = gen_wave(16,ryhme);</span><br><span class="line">sound(y,8192);</span><br><span class="line"> </span><br><span class="line">% --- Executes on button press in g1.</span><br><span class="line">function g1_Callback(hObject, eventdata, handles)</span><br><span class="line">global ryhme;</span><br><span class="line">global voiceChoice;</span><br><span class="line">y = gen_wave(17,ryhme);</span><br><span class="line">sound(y,8192);</span><br><span class="line"> </span><br><span class="line">% --- Executes on button press in a1.</span><br><span class="line">function a1_Callback(hObject, eventdata, handles)</span><br><span class="line">global ryhme;</span><br><span class="line">global voiceChoice;</span><br><span class="line">y = gen_wave(18,ryhme);</span><br><span class="line">sound(y,8192);</span><br><span class="line"> </span><br><span class="line">% --- Executes on button press in b1.</span><br><span class="line">function b1_Callback(hObject, eventdata, handles)</span><br><span class="line">global ryhme;</span><br><span class="line">global voiceChoice;</span><br><span class="line">y = gen_wave(19,ryhme);</span><br><span class="line">sound(y,8192);</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">小字二组</span><br><span class="line">% --- Executes on button press in e2.</span><br><span class="line">function c2_Callback(hObject, eventdata, handles)</span><br><span class="line">global ryhme;</span><br><span class="line">global voiceChoice;</span><br><span class="line">y = gen_wave(25,ryhme);</span><br><span class="line">sound(y,8192);</span><br><span class="line"> </span><br><span class="line">% --- Executes on button press in d2.</span><br><span class="line">function d2_Callback(hObject, eventdata, handles)</span><br><span class="line">global ryhme;</span><br><span class="line">global voiceChoice;</span><br><span class="line">y = gen_wave(26,ryhme);</span><br><span class="line">sound(y,8192);</span><br><span class="line"> </span><br><span class="line">% --- Executes on button press in c2.</span><br><span class="line">function e2_Callback(hObject, eventdata, handles)</span><br><span class="line">global ryhme;</span><br><span class="line">global voiceChoice;</span><br><span class="line">y = gen_wave(27,ryhme);</span><br><span class="line">sound(y,8192);</span><br><span class="line"> </span><br><span class="line">% --- Executes on button press in f2.</span><br><span class="line">function f2_Callback(hObject, eventdata, handles)</span><br><span class="line">global ryhme;</span><br><span class="line">global voiceChoice;</span><br><span class="line">y = gen_wave(28,ryhme);</span><br><span class="line">sound(y,8192);</span><br><span class="line"> </span><br><span class="line">% --- Executes on button press in g2.</span><br><span class="line">function g2_Callback(hObject, eventdata, handles)</span><br><span class="line">global ryhme;</span><br><span class="line">global voiceChoice;</span><br><span class="line">y = gen_wave(29,ryhme);</span><br><span class="line">sound(y,8192);</span><br><span class="line"> </span><br><span class="line">% --- Executes on button press in a2.</span><br><span class="line">function a2_Callback(hObject, eventdata, handles)</span><br><span class="line">global ryhme;</span><br><span class="line">global voiceChoice;</span><br><span class="line">y = gen_wave(30,ryhme);</span><br><span class="line">sound(y,8192);</span><br><span class="line"> </span><br><span class="line">% --- Executes on button press in b2.</span><br><span class="line">function b2_Callback(hObject, eventdata, handles)</span><br><span class="line">global ryhme;</span><br><span class="line">global voiceChoice;</span><br><span class="line">y = gen_wave(31,ryhme);</span><br><span class="line">sound(y,8192);</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">小字组#半音</span><br><span class="line">% --- Executes on button press in do_1.</span><br><span class="line">function do_1_Callback(hObject, eventdata, handles)</span><br><span class="line">global ryhme;</span><br><span class="line">global voiceChoice;</span><br><span class="line">y = gen_wave(8,ryhme);</span><br><span class="line">sound(y,8192);</span><br><span class="line"> </span><br><span class="line">% --- Executes on button press in re_1.</span><br><span class="line">function re_1_Callback(hObject, eventdata, handles)</span><br><span class="line">global ryhme;</span><br><span class="line">global voiceChoice;</span><br><span class="line">y = gen_wave(9,ryhme);</span><br><span class="line">sound(y,8192);</span><br><span class="line"> </span><br><span class="line">% --- Executes on button press in fa_1.</span><br><span class="line">function fa_1_Callback(hObject, eventdata, handles)</span><br><span class="line">global ryhme;</span><br><span class="line">global voiceChoice;</span><br><span class="line">y = gen_wave(10,ryhme);</span><br><span class="line">sound(y,8192);</span><br><span class="line"> </span><br><span class="line">% --- Executes on button press in sol_1.</span><br><span class="line">function sol_1_Callback(hObject, eventdata, handles)</span><br><span class="line">global ryhme;</span><br><span class="line">global voiceChoice;</span><br><span class="line">y = gen_wave(11,ryhme);</span><br><span class="line">sound(y,8192);</span><br><span class="line"> </span><br><span class="line">% --- Executes on button press in la_1.</span><br><span class="line">function la_1_Callback(hObject, eventdata, handles)</span><br><span class="line">global ryhme;</span><br><span class="line">global voiceChoice;</span><br><span class="line">y = gen_wave(12,ryhme);</span><br><span class="line">sound(y,8192);</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">小字一组#半音</span><br><span class="line">% --- Executes on button press in do_2.</span><br><span class="line">function do_2_Callback(hObject, eventdata, handles)</span><br><span class="line">global ryhme;</span><br><span class="line">global voiceChoice;</span><br><span class="line">y = gen_wave(20,ryhme);</span><br><span class="line">sound(y,8192);</span><br><span class="line"> </span><br><span class="line">% --- Executes on button press in re_2.</span><br><span class="line">function re_2_Callback(hObject, eventdata, handles)</span><br><span class="line">global ryhme;</span><br><span class="line">global voiceChoice;</span><br><span class="line">y = gen_wave(21,ryhme);</span><br><span class="line">sound(y,8192);</span><br><span class="line"> </span><br><span class="line">% --- Executes on button press in fa_2.</span><br><span class="line">function fa_2_Callback(hObject, eventdata, handles)</span><br><span class="line">global ryhme;</span><br><span class="line">global voiceChoice;</span><br><span class="line">y = gen_wave(22,ryhme);</span><br><span class="line">sound(y,8192);</span><br><span class="line"> </span><br><span class="line">% --- Executes on button press in sol_2.</span><br><span class="line">function sol_2_Callback(hObject, eventdata, handles)</span><br><span class="line">global ryhme;</span><br><span class="line">global voiceChoice;</span><br><span class="line">y = gen_wave(23,ryhme);</span><br><span class="line">sound(y,8192);</span><br><span class="line"> </span><br><span class="line">% --- Executes on button press in la_2.</span><br><span class="line">function la_2_Callback(hObject, eventdata, handles)</span><br><span class="line">global ryhme;</span><br><span class="line">global voiceChoice;</span><br><span class="line">y = gen_wave(24,ryhme);</span><br><span class="line">sound(y,8192);</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">小字二组#半音</span><br><span class="line">% --- Executes on button press in do_3.</span><br><span class="line">function do_3_Callback(hObject, eventdata, handles)</span><br><span class="line">global ryhme;</span><br><span class="line">global voiceChoice;</span><br><span class="line">y = gen_wave(32,ryhme);</span><br><span class="line">sound(y,8192);</span><br><span class="line"> </span><br><span class="line">% --- Executes on button press in re_3.</span><br><span class="line">function re_3_Callback(hObject, eventdata, handles)</span><br><span class="line">global ryhme;</span><br><span class="line">global voiceChoice;</span><br><span class="line">y = gen_wave(33,ryhme);</span><br><span class="line">sound(y,8192);</span><br><span class="line"> </span><br><span class="line">% --- Executes on button press in fa_3.</span><br><span class="line">function fa_3_Callback(hObject, eventdata, handles)</span><br><span class="line">global ryhme;</span><br><span class="line">global voiceChoice;</span><br><span class="line">y = gen_wave(34,ryhme);</span><br><span class="line">sound(y,8192);</span><br><span class="line"> </span><br><span class="line">% --- Executes on button press in sol_3.</span><br><span class="line">function sol_3_Callback(hObject, eventdata, handles)</span><br><span class="line">global ryhme;</span><br><span class="line">global voiceChoice;</span><br><span class="line">y = gen_wave(35,ryhme);</span><br><span class="line">sound(y,8192);</span><br><span class="line"> </span><br><span class="line">% --- Executes on button press in la_3.</span><br><span class="line">function la_3_Callback(hObject, eventdata, handles)</span><br><span class="line">global ryhme;</span><br><span class="line">global voiceChoice;</span><br><span class="line">y = gen_wave(36,ryhme);</span><br><span class="line">sound(y,8192);</span><br></pre></td></tr></table></figure><blockquote><p>GUI设计：<br><img src="https://img2020.cnblogs.com/blog/2231345/202112/2231345-20211202155738432-982034965.png" alt="image"></p><p>（二）音长选择：<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">使用switch函数，根据hObject的返回tag设置rhyme</span><br><span class="line">function Ryhme_SelectionChangedFcn(hObject, eventdata, handles)</span><br><span class="line">str=get(hObject,&#x27;tag&#x27;);</span><br><span class="line">global ryhme;</span><br><span class="line">ryhme=1;</span><br><span class="line">switch str</span><br><span class="line">    case &#x27;semiquaver&#x27;</span><br><span class="line">          ryhme=1/16;</span><br><span class="line">    case &#x27;quaver&#x27;</span><br><span class="line">          ryhme=1/8;</span><br><span class="line">    case &#x27;quater&#x27;</span><br><span class="line">          ryhme=1/4;</span><br><span class="line">    case &#x27;minim&#x27;</span><br><span class="line">          ryhme=1/2;</span><br><span class="line">    case &#x27;semibreve&#x27;</span><br><span class="line">          ryhme=1;</span><br><span class="line">end</span><br></pre></td></tr></table></figure><br>GUI设计：默认是全音<br><img src="https://img2020.cnblogs.com/blog/2231345/202112/2231345-20211202160001575-411219210.png" alt="image"></p><p>（三）音频选择（单音，双音多频）及音乐键盘的双音多频设计<br>使用switch函数，根据hObject的返回tag设置voiceChoice<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">function VoiceChoice_SelectionChangedFcn(hObject, eventdata, handles)</span><br><span class="line">str=get(hObject,&#x27;tag&#x27;);</span><br><span class="line">global voiceChoice;</span><br><span class="line">voiceChoice=1;</span><br><span class="line">switch str</span><br><span class="line">    case &#x27;OneVoice&#x27;</span><br><span class="line">          voiceChoice=1;</span><br><span class="line">    case &#x27;DoubleVoice&#x27;</span><br><span class="line">          voiceChoice=0;</span><br><span class="line">end</span><br></pre></td></tr></table></figure><br>GUI设计：<br><img src="https://img2020.cnblogs.com/blog/2231345/202112/2231345-20211202160125033-1208463457.png" alt="image"></p><p>（四）文件演奏方式选择<br>使用switch函数，根据hObject的返回tag设置playChoice<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">function PlayChoice_SelectionChangedFcn(hObject, eventdata, handles)</span><br><span class="line">str=get(hObject,&#x27;tag&#x27;);</span><br><span class="line">global playChoice;</span><br><span class="line">playChoice=2;</span><br><span class="line">switch str</span><br><span class="line">    case &#x27;ReadMusicFile&#x27;</span><br><span class="line">          playChoice=1;</span><br><span class="line">    case &#x27;EditMusicFile&#x27;</span><br><span class="line">          playChoice=0;</span><br><span class="line">end</span><br><span class="line">PlayChoice.clearCheck();</span><br></pre></td></tr></table></figure><br>GUI设计：<br><img src="https://img2020.cnblogs.com/blog/2231345/202112/2231345-20211202160259168-485008035.png" alt="image"></p><p>（五）读取文件演奏<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">读取文件函数：</span><br><span class="line">function OpenFile_Callback(hObject, eventdata, handles)</span><br><span class="line">global playChoice;</span><br><span class="line">global str1;</span><br><span class="line">global wenjian;</span><br><span class="line">if playChoice==1    </span><br><span class="line">    [filename, pathname] = uigetfile(&#x27;*.*&#x27;,&#x27;ÇëÑ¡ÔñÎÄ¼þ&#x27;);</span><br><span class="line">    wenjian = [pathname filename];</span><br><span class="line">    fp =fopen(wenjian);</span><br><span class="line">    i=1;</span><br><span class="line">    while ~feof(fp)</span><br><span class="line">        str1&#123;i&#125; = fgetl(fp);</span><br><span class="line">        i=i+1;</span><br><span class="line">    end</span><br><span class="line">    fclose(fp);</span><br><span class="line">    set(handles.MusicFile,&#x27;string&#x27;,str1)</span><br><span class="line">end</span><br><span class="line"></span><br><span class="line">播放文件函数：</span><br><span class="line">function PlayFile_Callback(hObject, eventdata, handles)</span><br><span class="line">global wenjian;</span><br><span class="line">de=importdata(wenjian);</span><br><span class="line">for k=1:length(de)</span><br><span class="line">    pause(0.5);</span><br><span class="line">    if de(k,1)==0</span><br><span class="line">        pause(0.2);</span><br><span class="line">        continue;</span><br><span class="line">    end</span><br><span class="line">    y = gen_wave(de(k,1),de(k,2));</span><br><span class="line">    sound(y,8192);</span><br><span class="line">end</span><br></pre></td></tr></table></figure><br>GUI设计：<br><img src="https://img2020.cnblogs.com/blog/2231345/202112/2231345-20211202160415842-491965750.png" alt="image"></p><p>（六）动态编辑乐谱演奏及其保存<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line">Text内容读取：</span><br><span class="line">% --- Executes on button press in ReadScore.</span><br><span class="line">function ReadScore_Callback(hObject, eventdata, handles)</span><br><span class="line">global str2;</span><br><span class="line">global playChoice;</span><br><span class="line">if playChoice==0</span><br><span class="line">   str2=get(handles.EditMusic,&#x27;string&#x27;);</span><br><span class="line">end</span><br><span class="line"></span><br><span class="line">播放Text曲谱：</span><br><span class="line">% --- Executes on button press in PlayEdit.</span><br><span class="line">function PlayEdit_Callback(hObject, eventdata, handles)</span><br><span class="line">global str2;</span><br><span class="line">for k=1:length(str2)</span><br><span class="line">    pause(0.5);</span><br><span class="line">    if str2num(str2(k,1))==0</span><br><span class="line">        pause(0.2);</span><br><span class="line">        continue;</span><br><span class="line">    end</span><br><span class="line">    y = gen_wave(str2num(str2(k,1)),str2num(str2(k,3)));</span><br><span class="line">    sound(y,8192);</span><br><span class="line">end</span><br><span class="line"> </span><br><span class="line">保存Text曲谱：</span><br><span class="line">% --- Executes on button press in Save.</span><br><span class="line">function Save_Callback(hObject, eventdata, handles)</span><br><span class="line">global str2;</span><br><span class="line"> </span><br><span class="line">[filename, pathname,FileIndex] = uiputfile(&#123;</span><br><span class="line">    &#x27;*.txt&#x27;,&#x27;Txt Files(*.txt)&#x27;;&#x27;*.*&#x27;,&#x27;All Files(*.*)&#x27;&#125;,&#x27;文件保存为&#x27;);</span><br><span class="line"> if FileIndex == 0  % 等于0表示cancel</span><br><span class="line">    return;</span><br><span class="line"> else</span><br><span class="line">    file_path = [pathname filename];</span><br><span class="line"> end</span><br><span class="line"> </span><br><span class="line"> fid=fopen(file_path,&#x27;w&#x27;);</span><br><span class="line"> fprintf(fid,datestr(now));</span><br><span class="line"> fprintf(fid,&#x27;\n&#x27;);</span><br><span class="line"> fprintf(fid,filename);</span><br><span class="line">  fprintf(fid,&#x27;\n&#x27;);</span><br><span class="line"> [b1,b2]=size(str2);</span><br><span class="line"> for i=1:b1</span><br><span class="line">    for j=1:(b2-1)</span><br><span class="line">       fprintf(fid,&#x27;%d &#x27;,str2num(str2(i,j)));</span><br><span class="line">    end</span><br><span class="line">    fprintf(fid,&#x27;\n&#x27;);</span><br><span class="line"> end</span><br><span class="line"> fclose(fid);</span><br></pre></td></tr></table></figure><br>GUI设计：<br><img src="https://img2020.cnblogs.com/blog/2231345/202112/2231345-20211202160534509-1990372976.png" alt="image"></p></blockquote><h3 id="测试数据及其结果分析"><a href="#测试数据及其结果分析" class="headerlink" title="测试数据及其结果分析"></a>测试数据及其结果分析</h3><blockquote><p>1）设计音乐键盘GUI界面，实现单音键盘的发声。<br><img src="https://img2020.cnblogs.com/blog/2231345/202112/2231345-20211202160814032-1297054470.png" alt="image"><br>鼠标点击音乐键盘，比如do,那么计算机将相应发出中央C的声音。</p><p>2）实现键盘的双音多频，即每个键盘对应低音频组的一个频率和高音频组的一个频率，实现按键的发出双音。<br>将选择音频功能选至双音多频。<br>同样鼠标点击音乐键盘，比如do，计算机将发出523Hz<em>1.25频率的声音，即发出低频0.05</em>523Hz和高频1.2*523Hz的复合声音。</p><p>3）能够演奏一段音乐。<br>选定文件，在MusicFileText中    会输出你选定的乐谱，同时点击播放，计算机便会开始播放乐谱<br><img src="https://img2020.cnblogs.com/blog/2231345/202112/2231345-20211202160927747-1590141034.png" alt="image"></p><p>4）能够在动态框输入想要的曲谱，并且将之播放。<br>在EditMusic Text中输入你选定的乐谱，同时点击播放，计算机便会开始播放乐谱。<br><img src="https://img2020.cnblogs.com/blog/2231345/202112/2231345-20211202160938505-691934034.png" alt="image"></p><p>点击保存，弹出选项框保存为txt文件<br><img src="https://img2020.cnblogs.com/blog/2231345/202112/2231345-20211202161019588-498214870.png" alt="image"><br><img src="https://img2020.cnblogs.com/blog/2231345/202112/2231345-20211202161032150-974363392.png" alt="image"></p></blockquote><h3 id="编写过程分析"><a href="#编写过程分析" class="headerlink" title="编写过程分析"></a>编写过程分析</h3><blockquote><p>模块一：<br>在编写发声函数过程时，测试音频总是无法发声，原因所在是因为sound函数的两个参数在传导的过程中一定要是整型常量，而global型变量需要在每一个函数中重新调用才可以使用，否则会造成传参错误。</p><p>模块二&amp;三&amp;四：<br>第一次写的时候，是把每一个按钮分开来写的，也是就是说，每一个选项框至少有两个以上的回调函数，大大加增了代码的复杂度，同时也不是很好调用，所以我为每一组按钮加了按钮组这个选项框，利用他的回调函数SelectionChangedFcn来查看每一个按钮的动作，将整个代码缩减到只有三个回调函数，大大避免了代码的冗余。</p><p>模块五：文件读取并不是问题，问题是读取之后保存在了数组里是自动将空格省略形成了一个若干行两列的数组，且数组元素是以原形式存在的，一开始运行代码的时候对于gen_wave的两个参数总是报错，究其原因是因为以为读取之后的存储形式我以为是字符串形式而且仍以为保留了空格导致我以为数组有三列，直接无法使用。</p><p>模块六：edit读取文字我一开始设置的是读取为string类型，后来在使用其内容时忘记将他转化为num类型，也是函数参数报错；同时，这里的读取是包括分隔符的，所以空格也成了数组的元素，也导致了我传参的错误。</p></blockquote>]]></content>
      
      
      
        <tags>
            
            <tag> matlab </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>文件管理（关于分页系统&amp;基于Centos&amp;C语言）</title>
      <link href="/2021/05/29/%E6%96%87%E4%BB%B6%E7%AE%A1%E7%90%86%EF%BC%88%E5%85%B3%E4%BA%8E%E5%88%86%E9%A1%B5%E7%B3%BB%E7%BB%9F&amp;%E5%9F%BA%E4%BA%8ECentos&amp;C%E8%AF%AD%E8%A8%80%EF%BC%89/"/>
      <url>/2021/05/29/%E6%96%87%E4%BB%B6%E7%AE%A1%E7%90%86%EF%BC%88%E5%85%B3%E4%BA%8E%E5%88%86%E9%A1%B5%E7%B3%BB%E7%BB%9F&amp;%E5%9F%BA%E4%BA%8ECentos&amp;C%E8%AF%AD%E8%A8%80%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<p><del><strong>本代码真正基于成阻链。</strong></del></p><h4 id="要求编写程序，完成如下功能："><a href="#要求编写程序，完成如下功能：" class="headerlink" title="要求编写程序，完成如下功能："></a>要求编写程序，完成如下功能：</h4><h5 id="构建成组链："><a href="#构建成组链：" class="headerlink" title="构建成组链："></a>构建成组链：</h5><ul><li>根据用户定义的盘块大小、文件区占用磁盘块数和分组的块数，模拟Unix系统将磁盘空闲块进行分组，并将这些盘块组构成成组链。<h5 id="查询-display"><a href="#查询-display" class="headerlink" title="查询(display)"></a>查询(display)</h5></li><li>可查询成组链表中空闲盘块总数、盘块分组情况<h4 id="选做功能："><a href="#选做功能：" class="headerlink" title="选做功能："></a>选做功能：</h4></li><li>实现盘块的分配或回收操作</li><li>显示每次分配或回收盘块的结果。</li></ul><h5 id="OS-c"><a href="#OS-c" class="headerlink" title="OS.c"></a>OS.c</h5><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br></pre></td><td class="code"><pre><span class="line">/*</span><br><span class="line"> * @Description:</span><br><span class="line"> * @Author: Jacob</span><br><span class="line"> * @Date: 2021-05-21 23:19:45</span><br><span class="line"> * @LastEditTime: 2021-05-21 23:44:54</span><br><span class="line"> * @LastEditors:</span><br><span class="line"> */</span><br><span class="line">#include &lt;stdio.h&gt;</span><br><span class="line">#include &lt;stdlib.h&gt;</span><br><span class="line">#include &lt;string.h&gt;</span><br><span class="line">#define BLOCKSIZ  512 /* 磁盘块大小 */</span><br><span class="line">#define NICFREE  10     /*每组的块数 */</span><br><span class="line">#define FILEBLK  25 /* 文件区磁盘块总数 */</span><br><span class="line">#define K11 /* 文件区开始块 */</span><br><span class="line">struct filsys /* 超级块部分数据结构 */</span><br><span class="line">&#123;  unsigned int s_nfree;    /* 空闲盘块数 */</span><br><span class="line">   unsigned short s_pfree;      /* 空闲盘块号栈指针 */</span><br><span class="line">   unsigned int s_free[NICFREE];     /* 空闲盘块号栈 */</span><br><span class="line">&#125;;</span><br><span class="line">struct filsys filsys;// 超级块数据结构  </span><br><span class="line">FILE *fd;</span><br><span class="line">char input_buf[20];            //命令行输入缓冲区</span><br><span class="line">int over;//命令行结束标记</span><br><span class="line">void bwrite( unsigned int ino, unsigned int *  buf )</span><br><span class="line">&#123;  fseek( fd, BLOCKSIZ * ino, SEEK_SET );</span><br><span class="line">   fwrite( buf, 1, BLOCKSIZ, fd );&#125;</span><br><span class="line">void bread( unsigned int ino, unsigned int *  buf )</span><br><span class="line">&#123;   fseek( fd,  BLOCKSIZ * ino, SEEK_SET );</span><br><span class="line">    fread( buf, 1, BLOCKSIZ, fd );&#125;</span><br><span class="line">void display()</span><br><span class="line">&#123;  unsigned int block_buf0[BLOCKSIZ / sizeof( int )];</span><br><span class="line">   printf(&quot;Filsys.s_nfree:%d\n&quot;, filsys.s_nfree);//显示空闲块数</span><br><span class="line">    printf(&quot;Filsys.s_pfree:%d\n&quot;, filsys.s_pfree);//显示空闲盘块号栈的栈顶</span><br><span class="line">    printf(&quot;current free:%d#\n&quot;, filsys.s_free[filsys.s_pfree]);//栈顶所指向的盘块号</span><br><span class="line">   int i=0;</span><br><span class="line">   while ( i&lt;=filsys.s_pfree &amp;&amp; filsys.s_nfree&gt;0)</span><br><span class="line">   &#123;    printf(&quot;filsys.s_free[%d]=%d \n&quot;,i,filsys.s_free[i] );</span><br><span class="line">         i++;</span><br><span class="line">   &#125;;</span><br><span class="line">   int lastBlk=filsys.s_free[0];</span><br><span class="line">   int free_block_num=NICFREE;</span><br><span class="line">   while ( lastBlk&gt;0 )</span><br><span class="line">   &#123;   bread( lastBlk, block_buf0 );</span><br><span class="line">        free_block_num = block_buf0[NICFREE];</span><br><span class="line">       printf(&quot;lastBlk=%d\n&quot;, lastBlk);</span><br><span class="line">    printf(&quot;Free_block_num=%d\n&quot;, free_block_num);</span><br><span class="line">        for( i=0; i &lt;free_block_num ; i++ )</span><br><span class="line">        &#123;   printf(&quot;block_buf0[%d]=%d \n&quot;,i,block_buf0[i] );&#125;</span><br><span class="line">        lastBlk=block_buf0[0];</span><br><span class="line">    &#125;  </span><br><span class="line">&#125;</span><br><span class="line">void alloc()//按顺序分配一块空闲盘块</span><br><span class="line">&#123;</span><br><span class="line">    int i;</span><br><span class="line">    unsigned int block_buf1[BLOCKSIZ / sizeof(int)];</span><br><span class="line">    if (filsys.s_pfree == 0)//分配到每组的最后一块</span><br><span class="line">    &#123;</span><br><span class="line">        if (filsys.s_free[0] == 0)//分配到最后一块</span><br><span class="line">        &#123;</span><br><span class="line">            printf(&quot;当前已无空闲块，请等待\n&quot;);//没有空闲盘块可供分配，返回函数调用</span><br><span class="line">            return;</span><br><span class="line">        &#125;</span><br><span class="line">        else//分配到其他组的最后一块时</span><br><span class="line">        &#123;</span><br><span class="line">            printf(&quot;此次分配的盘块号为：%d\n&quot;, filsys.s_free[filsys.s_pfree]);</span><br><span class="line">            bread(filsys.s_free[0], block_buf1);</span><br><span class="line">            if (filsys.s_nfree == (FILEBLK%NICFREE)+1)//准备分配倒数第二组的最后一块</span><br><span class="line">            &#123;</span><br><span class="line">                for (i = 0; i &lt; (FILEBLK%NICFREE)+1; i++)</span><br><span class="line">                &#123;</span><br><span class="line">                    filsys.s_free[i] = block_buf1[i];</span><br><span class="line">                &#125;</span><br><span class="line">                filsys.s_pfree = (FILEBLK%NICFREE);</span><br><span class="line">            &#125;</span><br><span class="line">            else</span><br><span class="line">            &#123;</span><br><span class="line">                for (i = 0; i &lt; NICFREE; i++)</span><br><span class="line">                &#123;</span><br><span class="line">                    filsys.s_free[i] = block_buf1[i];</span><br><span class="line">                &#125;</span><br><span class="line">                filsys.s_pfree = NICFREE - 1;</span><br><span class="line">            &#125;</span><br><span class="line">            filsys.s_nfree--;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    else//分配普通的盘块</span><br><span class="line">    &#123;</span><br><span class="line">        printf(&quot;此次分配的盘块号为：%d\n&quot;, filsys.s_free[filsys.s_pfree]);</span><br><span class="line">        filsys.s_pfree--;</span><br><span class="line">        filsys.s_nfree--;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">void reclaim(int a)//回收盘块号为a的盘块</span><br><span class="line">&#123;</span><br><span class="line">    int i;</span><br><span class="line">    if (filsys.s_pfree&lt;NICFREE-1)//当专用块中的空闲块不满时</span><br><span class="line">    &#123;</span><br><span class="line">        filsys.s_pfree++;</span><br><span class="line">        filsys.s_nfree++;//空闲盘块数加1</span><br><span class="line">        filsys.s_free[filsys.s_pfree] = a;</span><br><span class="line">    &#125;</span><br><span class="line">    else//当前空闲盘块号栈已满时，需要将栈中的内容存放到新分配的空闲盘块中</span><br><span class="line">    &#123;</span><br><span class="line">        unsigned int block_buf1[BLOCKSIZ / sizeof(int)];</span><br><span class="line">        for (i = 0; i &lt; NICFREE;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            block_buf1[i] = filsys.s_free[i];//将空闲盘块号栈中的内容写入</span><br><span class="line">        &#125;</span><br><span class="line">        block_buf1[NICFREE] = NICFREE;</span><br><span class="line">        filsys.s_pfree = 0;</span><br><span class="line">        filsys.s_free[0] = a;</span><br><span class="line">        filsys.s_nfree++;</span><br><span class="line">        bwrite(a, block_buf1);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">void getcmd()</span><br><span class="line">&#123;  int i=0;</span><br><span class="line">    while( !over )</span><br><span class="line">    &#123;   input_buf[i] = getchar();</span><br><span class="line">        if( input_buf[i] == &#x27; &#x27; )</span><br><span class="line">        &#123;if( i == 0 )// 命令行的开始是空格，应舍去  </span><br><span class="line">    i--;</span><br><span class="line">else</span><br><span class="line">&#123;   input_buf[i]=&#x27;\0&#x27;;</span><br><span class="line">     break;&#125;</span><br><span class="line">        &#125;else</span><br><span class="line">if( input_buf[i] == &#x27;\n&#x27; )</span><br><span class="line">&#123;   over = 1;</span><br><span class="line">    input_buf[i]=&#x27;\0&#x27;;</span><br><span class="line">    break;</span><br><span class="line">&#125;</span><br><span class="line">        i++;</span><br><span class="line">     &#125;</span><br><span class="line">&#125;</span><br><span class="line">int cmdexp()</span><br><span class="line">&#123;   </span><br><span class="line">     over = 0;</span><br><span class="line">     printf(&quot;显示=df,分配=alloc，回收=reclaim，退出=exit；\n&quot;);</span><br><span class="line">     printf( &quot;[@localhost]# &quot;); // 显示命令提示行</span><br><span class="line">     getcmd(); // 读取用户输入命令</span><br><span class="line">     if(( strcmp( input_buf, &quot;df&quot; ) == 0 ))</span><br><span class="line">     &#123;display(); //显示</span><br><span class="line">return 0;</span><br><span class="line">      &#125;</span><br><span class="line">         if(( strcmp( input_buf, &quot;alloc&quot; ) == 0 ))</span><br><span class="line">     &#123;alloc(); </span><br><span class="line">return 0;</span><br><span class="line">      &#125;</span><br><span class="line">         if(( strcmp( input_buf, &quot;reclaim&quot; ) == 0 ))</span><br><span class="line">     &#123;int a;</span><br><span class="line">     printf(&quot;回收的盘块号为：&quot;);</span><br><span class="line">     scanf(&quot;%d&quot;,&amp;a);</span><br><span class="line">     reclaim(a); </span><br><span class="line">return 0;</span><br><span class="line">      &#125;</span><br><span class="line">      if( strcmp( input_buf, &quot;exit&quot; ) == 0 )</span><br><span class="line">       &#123;printf( &quot;%s: \n&quot;, &quot;exit&quot; );</span><br><span class="line"> return 1;</span><br><span class="line">       &#125;</span><br><span class="line">       if( input_buf[0] != &#x27;\0&#x27; ) // 找不到该命令 </span><br><span class="line">       &#123;  printf( &quot;%s: command not found\n&quot;, input_buf );</span><br><span class="line">       &#125;</span><br><span class="line">       return 0;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">int main()&#123;</span><br><span class="line">unsigned int block_buf1[BLOCKSIZ];</span><br><span class="line">fd = tmpfile();  </span><br><span class="line">int i,j;</span><br><span class="line">char  *buf = (char * )malloc((FILEBLK+K)*BLOCKSIZ );// 申请空间 </span><br><span class="line">fseek( fd, 0, SEEK_SET );</span><br><span class="line">fwrite( buf, 1, (FILEBLK+K)*BLOCKSIZ , fd );</span><br><span class="line">free(buf);</span><br><span class="line">filsys.s_nfree = FILEBLK ; // 空闲文件块数  </span><br><span class="line">// 把第1组空闲盘块写入空闲盘块号栈  </span><br><span class="line">for( i = 0; i &lt; NICFREE; i++ )</span><br><span class="line">&#123;    filsys.s_free[i] = NICFREE - i + K - 1;</span><br><span class="line">&#125;</span><br><span class="line">filsys.s_pfree = NICFREE - 1;// 当前空闲盘块号栈指针  </span><br><span class="line">for( i = NICFREE * 2 - 1; i &lt; FILEBLK; i += NICFREE )</span><br><span class="line">&#123;  for(  j = 0; j &lt; NICFREE; j++ )</span><br><span class="line">    &#123;  block_buf1[j] = i - j + K;  //写下一组盘块空闲块号</span><br><span class="line">     &#125;  </span><br><span class="line">    block_buf1[NICFREE] = NICFREE;  //记录本组的空闲盘块数  </span><br><span class="line">    //把缓冲区内容写到每组空闲盘块号的最后一块中  </span><br><span class="line">    bwrite( i - NICFREE + K, block_buf1 );</span><br><span class="line">&#125;</span><br><span class="line">// 最后一组空闲盘块数可能不足NICFREE块，故需单独处理  </span><br><span class="line">i = i - NICFREE;</span><br><span class="line">block_buf1[0] = 0;</span><br><span class="line">for( j = 1; j &lt; FILEBLK - i; j++ )</span><br><span class="line">&#123;     block_buf1[j] = FILEBLK - j + K;</span><br><span class="line">&#125;</span><br><span class="line">block_buf1[NICFREE] = FILEBLK - i ;// 最末组的空闲盘块数  </span><br><span class="line">bwrite( i + K, block_buf1 );</span><br><span class="line">// 把超级块写入 block 1#  </span><br><span class="line">fseek( fd, BLOCKSIZ, SEEK_SET );</span><br><span class="line">fwrite( &amp;filsys, 1, sizeof( struct filsys ), fd ); </span><br><span class="line">while( cmdexp() == 0 )&#123;&#125;;// 当用户quit时, cmdexp()返回1  </span><br><span class="line">fclose( fd );</span><br><span class="line">return 1;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h4 id="关于代码解读"><a href="#关于代码解读" class="headerlink" title="关于代码解读"></a>关于代码解读</h4><pre><code>Unix空闲磁盘空间的管理：通常可把每个磁盘或磁带看做是一个文件卷</code></pre><ul><li>一个文件卷包括许多物理块，并按照块号排列。 </li><li>0#块一般用于系统引导或空闲；</li><li>1#块为超级块(Superblock)，</li><li>从K#块起及其以后各块都存放文件数据，直至文件卷的最后一块即(N-1)#块。<br><img src="https://img2020.cnblogs.com/blog/2231345/202105/2231345-20210529095051183-108238330.png" alt="image"></li></ul><hr><ul><li>空闲块成组链接法<br><img src="https://img2020.cnblogs.com/blog/2231345/202105/2231345-20210529095921133-177161299.jpg" alt="image"><h5 id=""><a href="#" class="headerlink" title=" "></a> </h5></li><li><p>main()——初始化模拟文件系统 </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">unsigned int block_buf1[BLOCKSIZ];</span><br><span class="line">fd = tmpfile();  </span><br><span class="line">buf = (char * )malloc((FILEBLK+K)*BLOCKSIZ );// 申请空间 </span><br><span class="line">fseek( fd, 0, SEEK_SET );</span><br><span class="line">fwrite( buf, 1, (FILEBLK+K)*BLOCKSIZ , fd );</span><br><span class="line">free(buf);</span><br></pre></td></tr></table></figure><p><img src="https://img2020.cnblogs.com/blog/2231345/202105/2231345-20210529100055456-1250035270.png" alt="image"><br>  从K#块起及其以后各块都存放文件数据，直至文件卷的最后一块即(N-1)#块</p></li><li><p>main()——初始化空闲盘块号栈</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">filsys.s_nfree = FILEBLK ; // 空闲文件块数  </span><br><span class="line">// 把第1组空闲盘块写入空闲盘块号栈  </span><br><span class="line">for( i = 0; i &lt; NICFREE; i++ )</span><br><span class="line">&#123;    filsys.s_free[i] = NICFREE - i + K - 1;</span><br><span class="line">&#125;</span><br><span class="line">filsys.s_pfree = NICFREE - 1;// 当前空闲盘块号栈指针</span><br></pre></td></tr></table></figure></li><li>main()：处理除第1组、最后1组外的其他组<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">for( i = NICFREE * 2 - 1; i &lt; FILEBLK; i += NICFREE )</span><br><span class="line">&#123;  for( j = 0; j &lt; NICFREE; j++ )</span><br><span class="line">    &#123;  block_buf1[j] = i - j + K;  //写下一组盘块空闲块号</span><br><span class="line">     &#125;  </span><br><span class="line">    block_buf1[NICFREE] = NICFREE;  //记录本组的空闲盘块数  </span><br><span class="line">    //把缓冲区内容写到每组空闲盘块号的最后一块中  </span><br><span class="line">    bwrite( i - NICFREE + K, block_buf1 );</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li>main()——处理最后一组<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">// 最后一组空闲盘块数可能不足NICFREE块，故需单独处理  </span><br><span class="line">i = i - NICFREE;</span><br><span class="line">block_buf1[0] = 0;</span><br><span class="line">for( j = 1; j &lt; FILEBLK - i; j++ )</span><br><span class="line">&#123;     block_buf1[j] = FILEBLK - j + K;</span><br><span class="line">&#125;</span><br><span class="line">block_buf1[NICFREE] = FILEBLK - i // 最末组的空闲盘块数  </span><br><span class="line">bwrite( i + K, block_buf1 );</span><br><span class="line">// 把超级块写入 block 1#  </span><br><span class="line">fseek( fd, BLOCKSIZ, SEEK_SET );</span><br><span class="line">fwrite( &amp;filsys, 1, sizeof( struct filsys ), fd ); </span><br><span class="line">while( cmdexp() == 0 )&#123;&#125;;// 当用户quit时, cmdexp()返回1  </span><br><span class="line">fclose( fd );</span><br><span class="line">return 1;</span><br></pre></td></tr></table></figure><h4 id="关于代码演示"><a href="#关于代码演示" class="headerlink" title="关于代码演示"></a>关于代码演示</h4><img src="https://img2020.cnblogs.com/blog/2231345/202105/2231345-20210529100657759-1132499358.jpg" alt="image"><br><img src="https://img2020.cnblogs.com/blog/2231345/202105/2231345-20210529100709652-558049490.jpg" alt="image"><br><img src="https://img2020.cnblogs.com/blog/2231345/202105/2231345-20210529100716273-677520630.jpg" alt="image"><br><img src="https://img2020.cnblogs.com/blog/2231345/202105/2231345-20210529100723190-1062593652.jpg" alt="image"><br><img src="https://img2020.cnblogs.com/blog/2231345/202105/2231345-20210529100730906-2003178955.jpg" alt="image"><br><img src="https://img2020.cnblogs.com/blog/2231345/202105/2231345-20210529100738304-1565444779.jpg" alt="image"></li></ul><h4 id="Attention"><a href="#Attention" class="headerlink" title="Attention"></a>Attention</h4><p>毕竟是自己打出来的代码，如果有错误之处，希望大家能够多多包涵，如果能指正就更好了</p>]]></content>
      
      
      
        <tags>
            
            <tag> 操作系统 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>关于页面置换的OS实验（基于Centos）</title>
      <link href="/2021/05/29/%E5%85%B3%E4%BA%8E%E9%A1%B5%E9%9D%A2%E7%BD%AE%E6%8D%A2%E7%9A%84OS%E5%AE%9E%E9%AA%8C%EF%BC%88%E5%9F%BA%E4%BA%8ECentos%EF%BC%89/"/>
      <url>/2021/05/29/%E5%85%B3%E4%BA%8E%E9%A1%B5%E9%9D%A2%E7%BD%AE%E6%8D%A2%E7%9A%84OS%E5%AE%9E%E9%AA%8C%EF%BC%88%E5%9F%BA%E4%BA%8ECentos%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<h4 id="验证下面算法，并输出下述各种算法的命中率。"><a href="#验证下面算法，并输出下述各种算法的命中率。" class="headerlink" title="验证下面算法，并输出下述各种算法的命中率。"></a>验证下面算法，并输出下述各种算法的命中率。</h4><h5 id="①先进先出的算法（FIFO）；"><a href="#①先进先出的算法（FIFO）；" class="headerlink" title="①先进先出的算法（FIFO）；"></a>①先进先出的算法（FIFO）；</h5><h5 id="②LRU；"><a href="#②LRU；" class="headerlink" title="②LRU；"></a>②LRU；</h5><h5 id="③最佳淘汰算法（OPT）。"><a href="#③最佳淘汰算法（OPT）。" class="headerlink" title="③最佳淘汰算法（OPT）。"></a>③最佳淘汰算法（OPT）。</h5><h5 id="多次反复运行程序，观察并记录运行结果，并分析原因"><a href="#多次反复运行程序，观察并记录运行结果，并分析原因" class="headerlink" title="多次反复运行程序，观察并记录运行结果，并分析原因"></a>多次反复运行程序，观察并记录运行结果，并分析原因</h5><h5 id="思考："><a href="#思考：" class="headerlink" title="思考："></a>思考：</h5><h6 id="如果增加分配给作业的内存块数，将会对作业运行过程中的缺页率产生什么影响。"><a href="#如果增加分配给作业的内存块数，将会对作业运行过程中的缺页率产生什么影响。" class="headerlink" title="如果增加分配给作业的内存块数，将会对作业运行过程中的缺页率产生什么影响。"></a>如果增加分配给作业的内存块数，将会对作业运行过程中的缺页率产生什么影响。</h6><h5 id="main-cc"><a href="#main-cc" class="headerlink" title="main.cc"></a>main.cc</h5><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line">/*</span><br><span class="line"> * @Description: </span><br><span class="line"> * @Author: Jacob</span><br><span class="line"> * @Date: 2021-05-25 23:20:32</span><br><span class="line"> * @LastEditTime: 2021-05-28 23:44:31</span><br><span class="line"> * @LastEditors:  </span><br><span class="line"> */</span><br><span class="line">#include &lt;iostream&gt;</span><br><span class="line">#include &lt;string&gt;</span><br><span class="line">#include &lt;vector&gt;</span><br><span class="line">#include &lt;cstdlib&gt;</span><br><span class="line">#include &lt;cstdio&gt;</span><br><span class="line">#include &lt;unistd.h&gt;</span><br><span class="line"></span><br><span class="line">using namespace std;</span><br><span class="line"></span><br><span class="line">#define INVALID -1</span><br><span class="line"></span><br><span class="line">const int TOTAL_INSTRUCTION(320);</span><br><span class="line">const int TOTAL_VP(32);</span><br><span class="line">const int CLEAR_PERIOD(50);</span><br><span class="line"></span><br><span class="line">#include &quot;Page.h&quot;</span><br><span class="line">#include &quot;PageControl.h&quot;</span><br><span class="line">#include &quot;Memory.h&quot;</span><br><span class="line"></span><br><span class="line">int main()</span><br><span class="line">&#123;</span><br><span class="line">int i;</span><br><span class="line">CMemory a;</span><br><span class="line">for(i=4;i&lt;=32;i++)</span><br><span class="line">&#123;  cout&lt;&lt;&quot;i=&quot;&lt;&lt;i&lt;&lt;&quot;\n&quot;;</span><br><span class="line">  a.FIFO(i);</span><br><span class="line">          a.LRU(i);</span><br><span class="line">  a.OPT(i);</span><br><span class="line">  cout&lt;&lt;&quot;\n&quot;;</span><br><span class="line">&#125;</span><br><span class="line">return 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="Memory-h"><a href="#Memory-h" class="headerlink" title="Memory.h"></a>Memory.h</h5><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br></pre></td><td class="code"><pre><span class="line">/*</span><br><span class="line"> * @Description: </span><br><span class="line"> * @Author: Jacob</span><br><span class="line"> * @Date: 2021-05-25 23:19:27</span><br><span class="line"> * @LastEditTime: 2021-05-28 23:45:30</span><br><span class="line"> * @LastEditors:  </span><br><span class="line"> */</span><br><span class="line">#ifndef _MEMORY_H</span><br><span class="line">#define _MEMORY_H</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">class CMemory</span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">public:</span><br><span class="line">CMemory();</span><br><span class="line">void initialize(const int nTotal_pf);</span><br><span class="line">void FIFO(const int nTotal_pf);</span><br><span class="line">void LRU(const int nTotal_pf);</span><br><span class="line">void NUR(const int nTotal_pf);</span><br><span class="line">void OPT(const int nTotal_pf);</span><br><span class="line"></span><br><span class="line">private:</span><br><span class="line">vector&lt;CPage&gt; _vDiscPages;</span><br><span class="line">vector&lt;CPageControl&gt; _vMemoryPages;</span><br><span class="line">CPageControl *_pFreepf_head,*_pBusypf_head,*_pBusypf_tail;</span><br><span class="line">vector&lt;int&gt; _vMain,_vPage,_vOffset;</span><br><span class="line">int _nDiseffect;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">CMemory::CMemory():_vDiscPages(TOTAL_VP),</span><br><span class="line">   _vMemoryPages(TOTAL_VP),</span><br><span class="line">   _vMain(TOTAL_INSTRUCTION),</span><br><span class="line">   _vPage(TOTAL_INSTRUCTION),</span><br><span class="line">   _vOffset(TOTAL_INSTRUCTION)</span><br><span class="line">&#123;</span><br><span class="line">int S,i,nRand;</span><br><span class="line">srand(getpid()*10);</span><br><span class="line">nRand=rand()%32767;</span><br><span class="line"></span><br><span class="line">S=(float)319*nRand/32767+1;</span><br><span class="line">for(i=0;i&lt;TOTAL_INSTRUCTION;i+=4)</span><br><span class="line">&#123;</span><br><span class="line">_vMain[i]=S;</span><br><span class="line">_vMain[i+1]=_vMain[i]+1;</span><br><span class="line">nRand=rand()%32767;</span><br><span class="line">_vMain[i+2]=(float)_vMain[i]*nRand/32767;</span><br><span class="line">_vMain[i+3]=_vMain[i+2]+1;</span><br><span class="line">nRand=rand()%32767;</span><br><span class="line">S=(float)nRand *(318-_vMain[i+2])/32767+_vMain[i+2]+2;</span><br><span class="line">&#125;</span><br><span class="line">for(i=0;i&lt;TOTAL_INSTRUCTION;i++)</span><br><span class="line">&#123;</span><br><span class="line">_vPage[i]=_vMain[i]/10;</span><br><span class="line">_vOffset[i]=_vMain[i]%10;</span><br><span class="line">_vPage[i]%=32;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">void CMemory::initialize(const int nTotal_pf)</span><br><span class="line">&#123;</span><br><span class="line">int ix;</span><br><span class="line">_nDiseffect=0;</span><br><span class="line">for(ix=0;ix&lt;_vDiscPages.size();ix++)</span><br><span class="line">&#123;</span><br><span class="line">_vDiscPages[ix].m_nPageNumber=ix;</span><br><span class="line">_vDiscPages[ix].m_nPageFaceNumber=INVALID;</span><br><span class="line">_vDiscPages[ix].m_nCounter=0;</span><br><span class="line">_vDiscPages[ix].m_nTime=-1;</span><br><span class="line">&#125;</span><br><span class="line">for(ix=1;ix&lt;nTotal_pf;ix++)</span><br><span class="line">&#123;</span><br><span class="line">_vMemoryPages[ix-1].m_pNext=&amp;_vMemoryPages[ix];</span><br><span class="line">_vMemoryPages[ix-1].m_nPageFaceNumber=ix-1;</span><br><span class="line">&#125;</span><br><span class="line">_vMemoryPages[nTotal_pf-1].m_pNext=NULL;</span><br><span class="line">_vMemoryPages[nTotal_pf-1].m_nPageFaceNumber=nTotal_pf-1;</span><br><span class="line">_pFreepf_head=&amp;_vMemoryPages[0];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">void CMemory::FIFO(const int nTotal_pf)</span><br><span class="line">&#123;</span><br><span class="line">int i;</span><br><span class="line">CPageControl *p;</span><br><span class="line">initialize(nTotal_pf);</span><br><span class="line">_pBusypf_head=_pBusypf_tail=NULL;</span><br><span class="line">for(i=0;i&lt;TOTAL_INSTRUCTION;i++)</span><br><span class="line">&#123;</span><br><span class="line">  if(_vDiscPages[_vPage[i]].m_nPageFaceNumber==INVALID)</span><br><span class="line">    &#123;</span><br><span class="line">      _nDiseffect+=1;</span><br><span class="line">      if(_pFreepf_head==NULL)  //no empty pages</span><br><span class="line">&#123;</span><br><span class="line">  p=_pBusypf_head-&gt;m_pNext;</span><br><span class="line">  _vDiscPages[_pBusypf_head-&gt;m_nPageNumber].m_nPageFaceNumber=INVALID;</span><br><span class="line">  _pFreepf_head=_pBusypf_head;</span><br><span class="line">  _pFreepf_head-&gt;m_pNext=NULL;</span><br><span class="line">  _pBusypf_head=p;</span><br><span class="line">&#125;</span><br><span class="line">      p=_pFreepf_head-&gt;m_pNext;</span><br><span class="line">      _pFreepf_head-&gt;m_pNext=NULL;</span><br><span class="line">      _pFreepf_head-&gt;m_nPageNumber=_vPage[i];</span><br><span class="line">      _vDiscPages[_vPage[i]].m_nPageFaceNumber=_pFreepf_head-&gt;m_nPageFaceNumber;</span><br><span class="line">      if(_pBusypf_tail==NULL)</span><br><span class="line">_pBusypf_head=_pBusypf_tail=_pFreepf_head;</span><br><span class="line">      else</span><br><span class="line">&#123;</span><br><span class="line">  _pBusypf_tail-&gt;m_pNext=_pFreepf_head;</span><br><span class="line">  _pBusypf_tail=_pFreepf_head;</span><br><span class="line">&#125;</span><br><span class="line">      _pFreepf_head=p;</span><br><span class="line">     &#125;</span><br><span class="line">  &#125;</span><br><span class="line"> cout&lt;&lt;&quot;FIFO: &quot;&lt;&lt;1-(float)_nDiseffect/320;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">void CMemory::LRU(const int nTotal_pf)</span><br><span class="line">&#123;</span><br><span class="line">  int i,j,nMin,minj,nPresentTime(0);</span><br><span class="line">  initialize(nTotal_pf);</span><br><span class="line">  for(i=0;i&lt;TOTAL_INSTRUCTION;i++)</span><br><span class="line">    &#123;</span><br><span class="line">      if(_vDiscPages[_vPage[i]].m_nPageFaceNumber==INVALID)</span><br><span class="line">&#123;</span><br><span class="line">  _nDiseffect++;</span><br><span class="line">  if(_pFreepf_head==NULL)</span><br><span class="line">    &#123;</span><br><span class="line">      nMin=32767;</span><br><span class="line">      for(j=0;j&lt;TOTAL_VP;j++) //get the subscribe of the least used page</span><br><span class="line">//after the recycle iMin is the number of times</span><br><span class="line">//used of the least used page while minj is its subscribe</span><br><span class="line">if(nMin&gt;_vDiscPages[j].m_nTime&amp;&amp;_vDiscPages[j].m_nPageFaceNumber!=INVALID)</span><br><span class="line">  &#123;</span><br><span class="line">    nMin=_vDiscPages[j].m_nTime; </span><br><span class="line">    minj=j;</span><br><span class="line">  &#125;</span><br><span class="line">      _pFreepf_head=&amp;_vMemoryPages[_vDiscPages[minj].m_nPageFaceNumber];</span><br><span class="line">      _vDiscPages[minj].m_nPageFaceNumber=INVALID;</span><br><span class="line">      _vDiscPages[minj].m_nTime=-1;</span><br><span class="line">      _pFreepf_head-&gt;m_pNext=NULL;</span><br><span class="line">    &#125;</span><br><span class="line">  _vDiscPages[_vPage[i]].m_nPageFaceNumber=_pFreepf_head-&gt;m_nPageFaceNumber;</span><br><span class="line">  _vDiscPages[_vPage[i]].m_nTime=nPresentTime;</span><br><span class="line">  _pFreepf_head=_pFreepf_head-&gt;m_pNext;</span><br><span class="line">&#125;</span><br><span class="line">      else</span><br><span class="line">_vDiscPages[_vPage[i]].m_nTime=nPresentTime;</span><br><span class="line">      </span><br><span class="line">      nPresentTime++;</span><br><span class="line">    &#125;</span><br><span class="line">  cout&lt;&lt;&quot;LRU: &quot;&lt;&lt;1-(float)_nDiseffect/320;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">void CMemory::NUR(const int nTotal_pf)</span><br><span class="line">&#123;</span><br><span class="line">  int i,j,nDiscPage,nOld_DiscPage;</span><br><span class="line">  bool bCont_flag;</span><br><span class="line">  initialize(nTotal_pf);</span><br><span class="line">  nDiscPage=0;</span><br><span class="line">  for(i=0;i&lt;TOTAL_INSTRUCTION;i++)</span><br><span class="line">    &#123;</span><br><span class="line">      if(_vDiscPages[_vPage[i]].m_nPageFaceNumber==INVALID)</span><br><span class="line">&#123;</span><br><span class="line">  _nDiseffect++;</span><br><span class="line">  if(_pFreepf_head==NULL)</span><br><span class="line">    &#123;</span><br><span class="line">      bCont_flag=true;</span><br><span class="line">      nOld_DiscPage=nDiscPage;</span><br><span class="line">      while(bCont_flag)</span><br><span class="line">&#123;</span><br><span class="line">  if(_vDiscPages[nDiscPage].m_nCounter==0&amp;&amp;_vDiscPages[nDiscPage].m_nPageFaceNumber!=INVALID)</span><br><span class="line">    bCont_flag=false;</span><br><span class="line">  else</span><br><span class="line">    &#123;</span><br><span class="line">      nDiscPage++;</span><br><span class="line">      if(nDiscPage==TOTAL_VP) nDiscPage=0;</span><br><span class="line">      if(nDiscPage==nOld_DiscPage)</span><br><span class="line">for(j=0;j&lt;TOTAL_VP;j++)</span><br><span class="line">  _vDiscPages[j].m_nCounter=0;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">      _pFreepf_head=&amp;_vMemoryPages[_vDiscPages[nDiscPage].m_nPageFaceNumber];</span><br><span class="line">      _vDiscPages[nDiscPage].m_nPageFaceNumber=INVALID;</span><br><span class="line">      _pFreepf_head-&gt;m_pNext=NULL;</span><br><span class="line">    &#125;</span><br><span class="line">  _vDiscPages[_vPage[i]].m_nPageFaceNumber=_pFreepf_head-&gt;m_nPageFaceNumber;</span><br><span class="line">  _pFreepf_head=_pFreepf_head-&gt;m_pNext;</span><br><span class="line">&#125;</span><br><span class="line">      else</span><br><span class="line">_vDiscPages[_vPage[i]].m_nCounter=1;</span><br><span class="line">      if(i%CLEAR_PERIOD==0)</span><br><span class="line">for(j=0;j&lt;TOTAL_VP;j++)</span><br><span class="line">  _vDiscPages[j].m_nCounter=0;</span><br><span class="line">    &#125;</span><br><span class="line">  cout&lt;&lt;&quot;NUR:&quot;&lt;&lt;1-(float)_nDiseffect/320;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">void CMemory::OPT(const int nTotal_pf)</span><br><span class="line">&#123;</span><br><span class="line">  int i,j,max,maxpage,nDistance,vDistance[TOTAL_VP];</span><br><span class="line">  </span><br><span class="line">  initialize(nTotal_pf);</span><br><span class="line">  for(i=0;i&lt;TOTAL_INSTRUCTION;i++)</span><br><span class="line">    &#123;</span><br><span class="line">      if(_vDiscPages[_vPage[i]].m_nPageFaceNumber==INVALID)</span><br><span class="line">&#123;</span><br><span class="line">  _nDiseffect++;</span><br><span class="line">  if(_pFreepf_head==NULL)</span><br><span class="line">    &#123;</span><br><span class="line">      for(j=0;j&lt;TOTAL_VP;j++)</span><br><span class="line">if(_vDiscPages[j].m_nPageFaceNumber!=INVALID)</span><br><span class="line">  vDistance[j]=32767;</span><br><span class="line">else</span><br><span class="line">  vDistance[j]=0;</span><br><span class="line">      nDistance=1;</span><br><span class="line">      for(j=i+1;j&lt;TOTAL_INSTRUCTION;j++)</span><br><span class="line">&#123;</span><br><span class="line">  if((_vDiscPages[_vPage[j]].m_nPageFaceNumber!=INVALID)&amp;&amp;(vDistance[_vPage[j]]==32767))</span><br><span class="line">    vDistance[_vPage[j]]=nDistance;</span><br><span class="line">  nDistance++;</span><br><span class="line">&#125;</span><br><span class="line">      max=-1;</span><br><span class="line">      for(j=0;j&lt;TOTAL_VP;j++)</span><br><span class="line">if(max&lt;vDistance[j])</span><br><span class="line">  &#123;</span><br><span class="line">    max=vDistance[j];</span><br><span class="line">    maxpage=j;</span><br><span class="line">  &#125;</span><br><span class="line">      _pFreepf_head=&amp;_vMemoryPages[_vDiscPages[maxpage].m_nPageFaceNumber];</span><br><span class="line">      _pFreepf_head-&gt;m_pNext=NULL;</span><br><span class="line">      _vDiscPages[maxpage].m_nPageFaceNumber=INVALID;</span><br><span class="line">    &#125;</span><br><span class="line">  _vDiscPages[_vPage[i]].m_nPageFaceNumber=_pFreepf_head-&gt;m_nPageFaceNumber;</span><br><span class="line">  _pFreepf_head=_pFreepf_head-&gt;m_pNext;</span><br><span class="line">&#125;</span><br><span class="line">    &#125;</span><br><span class="line">  cout&lt;&lt;&quot;OPT:&quot;&lt;&lt;1-(float)_nDiseffect/320;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#endif</span><br></pre></td></tr></table></figure><h5 id="Page-h"><a href="#Page-h" class="headerlink" title="Page.h"></a>Page.h</h5><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">/*</span><br><span class="line"> * @Description: </span><br><span class="line"> * @Author: Jacob</span><br><span class="line"> * @Date: 2021-05-25 23:20:27</span><br><span class="line"> * @LastEditTime: 2021-05-28 23:44:07</span><br><span class="line"> * @LastEditors:  </span><br><span class="line"> */</span><br><span class="line">#ifndef _PAGE_H</span><br><span class="line">#define _PAGE_H</span><br><span class="line"></span><br><span class="line">class CPage</span><br><span class="line">&#123;</span><br><span class="line">public:</span><br><span class="line">int m_nPageNumber,</span><br><span class="line">m_nPageFaceNumber,</span><br><span class="line">m_nCounter,</span><br><span class="line">m_nTime;</span><br><span class="line">&#125;;</span><br><span class="line">#endif</span><br></pre></td></tr></table></figure><h5 id="PageControl-h"><a href="#PageControl-h" class="headerlink" title="PageControl.h"></a>PageControl.h</h5><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">/*</span><br><span class="line"> * @Description: </span><br><span class="line"> * @Author: Jacob</span><br><span class="line"> * @Date: 2021-05-25 23:19:20</span><br><span class="line"> * @LastEditTime: 2021-05-28 23:44:25</span><br><span class="line"> * @LastEditors:  </span><br><span class="line"> */</span><br><span class="line">#ifndef _PAGECONTROL_H</span><br><span class="line">#define _PAGECONTROL_H</span><br><span class="line"></span><br><span class="line">class CPageControl</span><br><span class="line">&#123;</span><br><span class="line">public:</span><br><span class="line">int m_nPageNumber,m_nPageFaceNumber;</span><br><span class="line">class CPageControl * m_pNext;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">#endif</span><br></pre></td></tr></table></figure><p>```</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>关于电脑已连接wifi但是无法正常上网的问题解决方法</title>
      <link href="/2021/04/30/%E5%85%B3%E4%BA%8E%E7%94%B5%E8%84%91%E5%B7%B2%E8%BF%9E%E6%8E%A5wifi%E4%BD%86%E6%98%AF%E6%97%A0%E6%B3%95%E6%AD%A3%E5%B8%B8%E4%B8%8A%E7%BD%91%E7%9A%84%E9%97%AE%E9%A2%98%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95/"/>
      <url>/2021/04/30/%E5%85%B3%E4%BA%8E%E7%94%B5%E8%84%91%E5%B7%B2%E8%BF%9E%E6%8E%A5wifi%E4%BD%86%E6%98%AF%E6%97%A0%E6%B3%95%E6%AD%A3%E5%B8%B8%E4%B8%8A%E7%BD%91%E7%9A%84%E9%97%AE%E9%A2%98%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95/</url>
      
        <content type="html"><![CDATA[<h1 id=""><a href="#" class="headerlink" title=" "></a> </h1><p>我的电脑已经连续三次出现这种已连接网络但是无法正常使用网络的状况了，所以，我估计，这可能是大家可能出现的共同问题，故做出稍微全面的案例分析和解决方法概述。</p><pre><code>直接进入正题</code></pre><h2 id="操作前检查"><a href="#操作前检查" class="headerlink" title="操作前检查"></a>操作前检查</h2><p>你要是连网都没有，我就emmm</p><p>首先检查驱动，打开设备管理器，自己看看网络适配器有没有问题，正常运作就是没问题，有问题你就脱机重新装驱动吧，U盘搞定</p><p>驱动没问题，那就打开cmd(⌘(win)+R)输入</p><pre><code>services.msc</code></pre><p>往下翻，看看 WLAN AutoConfig开没开，不管开没开把它换成自动，然后网就出来了。</p><p>要是还不行，看看你家路由器吧，要不重置一下？？？我觉得路由器坏了。</p><p>至于Win10疑难解答检测出来的无法配置DNS，这个东西你不要管他，基本不可能的，基本上就是网络节点错误了，你往下看就是了，自动匹配IP和DNS yyds.</p><h2 id="正常操作"><a href="#正常操作" class="headerlink" title="正常操作"></a>正常操作</h2><p>这第一种问题，是可以正常操作解决的，因为它的产生原理比较正常（这里不做原理概述，可以自行深入探讨）</p><pre><code>解决方式</code></pre><p>  ⌘(win)+X调出开始界面打开Powershell(管理员)，输入：</p><pre><code>netsh winsock reset回车netsh int ip reset回车ipconfig /flushdns重启</code></pre><p> 好了，基本无事，绝大部分无法使用网络是因为这个</p><h2 id="非正常操作—VPN问题"><a href="#非正常操作—VPN问题" class="headerlink" title="非正常操作—VPN问题"></a>非正常操作—VPN问题</h2><p>这个问题很奇怪，是因为VPN更改网络节点导致网络异常，我这里是因为使用了LetsVPN这个东西，虽然稳定，但是问题也很大。</p><pre><code>解决方式</code></pre><p>这个问题不难解决，把VPN卸载了就行，可以重新安装，以后要是再用VPN记得关机之前把VPN关了，这个问题是有可能复发的，我出现了两次了，不知道你们会出现几次。</p><h2 id="可能还有解决方法，欢迎补充"><a href="#可能还有解决方法，欢迎补充" class="headerlink" title="可能还有解决方法，欢迎补充"></a>可能还有解决方法，欢迎补充</h2><p>你要实在没法解决，win10自带重置此电脑，你一键重置了他也就行了，啥问题都能给</p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
